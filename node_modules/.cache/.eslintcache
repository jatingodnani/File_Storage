[{"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\index.js":"1","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\App.js":"2","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\operation.js":"3","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\tzkt.js":"4","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Navbar.js":"5","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\wallet.js":"6","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\tezos.js":"7","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\FileUpload.js":"8","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Display.js":"9","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Modal.js":"10"},{"size":269,"mtime":1679906024523,"results":"11","hashOfConfig":"12"},{"size":4535,"mtime":1679946184145,"results":"13","hashOfConfig":"12"},{"size":766,"mtime":1679944804810,"results":"14","hashOfConfig":"12"},{"size":310,"mtime":1679906024531,"results":"15","hashOfConfig":"12"},{"size":1169,"mtime":1679939471030,"results":"16","hashOfConfig":"12"},{"size":686,"mtime":1679944776363,"results":"17","hashOfConfig":"12"},{"size":284,"mtime":1679906024530,"results":"18","hashOfConfig":"12"},{"size":2260,"mtime":1679943013734,"results":"19","hashOfConfig":"12"},{"size":1650,"mtime":1679944880109,"results":"20","hashOfConfig":"12"},{"size":1698,"mtime":1679947835292,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"dka3fw",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\index.js",[],["46","47"],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\App.js",[],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\operation.js",[],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\tzkt.js",[],["48","49"],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Navbar.js",[],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\wallet.js",[],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\utils\\tezos.js",[],"F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\FileUpload.js",["50"],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\nimport { addOperation } from \"../utils/operation\";\r\n\r\nconst FileUpload = ({account,contract}) => {\r\n  const [file, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState(\"No image selected\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        const resFile = await axios({\r\n          method: \"post\",\r\n          url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n          data: formData,\r\n          headers: {\r\n            pinata_api_key: `a9c60da020ca93360f7b`,\r\n            pinata_secret_api_key: `cdacb7ae20117048e0610cea7ca0d7c5d9a86a1f242176b15c3742c9c68f1488`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n        await contract.method.add(ImgHash);\r\n    //     //const signer = contract.connect(provider.getSigner());\r\n        // tezos.contract.add(account, ImgHash);\r\n      } catch (e) {\r\n        alert(\"Unable to upload image to Pinata\");\r\n      }\r\n    }\r\n    alert(\"Successfully Image Uploaded\");\r\n    setFileName(\"No image selected\");\r\n    setFile(null);\r\n  };\r\n  const retrieveFile = (e) => {\r\n    const data = e.target.files[0]; //files array of files object\r\n    console.log(data);\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(data);\r\n    reader.onloadend = () => {\r\n      setFile(e.target.files[0]);\r\n    };\r\n    setFileName(e.target.files[0].name);\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"top\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"file-upload\" className=\"choose\">\r\n          Choose Image\r\n        </label>\r\n        <input\r\n          disabled={!account}\r\n          type=\"file\"\r\n          id=\"file-upload\"\r\n          name=\"data\"\r\n          onChange={retrieveFile}\r\n        />\r\n        <span className=\"textArea\">Image:{fileName}</span>\r\n        <button type=\"submit\" className=\"upload\" disabled = {!file}>\r\n          Upload File\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default FileUpload;","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Display.js",["51"],"import { useState } from \"react\";\r\nimport \"./Display.css\";\r\nimport { display_operation } from \"../utils/operation\";\r\nconst Display = ({account,contract}) => {\r\n  const [data, setData] = useState(\"\");\r\n  const getdata = async () => {\r\n    let dataArray;\r\n    const Otheraddress = document.querySelector(\".address\").value;\r\n    try {\r\n      if (Otheraddress) {\r\n        dataArray = await display_operation(Otheraddress);\r\n      } else {\r\n        dataArray = await display_operation(account);\r\n      }\r\n    } catch (e) {\r\n      alert(\"You don't have access\");\r\n    }\r\n    const isEmpty = Object.keys(dataArray).length === 0;\r\n\r\n    if (!isEmpty) {\r\n      const str = dataArray.toString();\r\n      const str_array = str.split(\",\");\r\n      const images = str_array.map((item, i) => {\r\n        return (\r\n          <a href={item} key={i} target=\"_blank\">\r\n            <img\r\n              key={i}\r\n              src={`https://gateway.pinata.cloud/ipfs/${item.substring(6)}`}\r\n              alt=\"new\"\r\n              className=\"image-list\"\r\n            ></img>\r\n          </a>\r\n        );\r\n      });\r\n      setData(images);\r\n    } else {\r\n      alert(\"No image to display\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <button className=\"center button\" onClick={getdata}>\r\n        Get Your Data\r\n      </button>\r\n      <hr className=\"divider\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Other Address\"\r\n        className=\"address\"\r\n      ></input>\r\n      <button className=\"center button\" onClick={getdata}>\r\n        Get Others Data\r\n      </button>\r\n      <div className=\"image-list\">{data}</div>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Display;","F:\\Jatin\\project\\Contracts\\Lottery_full\\lottery-dapp-boilerplate-complete\\src\\components\\Modal.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":25,"column":11,"nodeType":"64","messageId":"65","endLine":25,"endColumn":50,"fix":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-unused-vars","'addOperation' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"69","text":"70"},"no-global-assign","no-unsafe-negation",[845,845]," rel=\"noreferrer\""]