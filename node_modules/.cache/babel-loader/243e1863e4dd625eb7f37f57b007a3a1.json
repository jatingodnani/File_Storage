{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { defaultValues } from '@airgap/beacon-types';\n/**\n * @internalapi\n *\n * A storage that can be used in chrome extensions\n */\nexport class ChromeStorage {\n  static isSupported() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return typeof window !== 'undefined' && typeof chrome !== 'undefined' && Boolean(chrome) && Boolean(chrome.runtime) && Boolean(chrome.runtime.id);\n    });\n  }\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => {\n        chrome.storage.local.get(null, storageContent => {\n          if (storageContent[key]) {\n            resolve(storageContent[key]);\n          } else {\n            if (typeof defaultValues[key] === 'object') {\n              resolve(JSON.parse(JSON.stringify(defaultValues[key])));\n            } else {\n              resolve(defaultValues[key]);\n            }\n          }\n        });\n      });\n    });\n  }\n  set(key, value) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => {\n        chrome.storage.local.set({\n          [key]: value\n        }, () => {\n          resolve();\n        });\n      });\n    });\n  }\n  delete(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => {\n        chrome.storage.local.set({\n          [key]: undefined\n        }, () => {\n          resolve();\n        });\n      });\n    });\n  }\n}","map":{"version":3,"names":["defaultValues","ChromeStorage","isSupported","window","chrome","Boolean","runtime","id","get","key","Promise","resolve","storage","local","storageContent","JSON","parse","stringify","set","value","delete","undefined"],"sources":["../../../src/storage/ChromeStorage.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAoDA,aAAa,QAAQ,sBAAsB;AAE/F;;;;;AAKA,OAAM,MAAOC,aAAa;EACjB,OAAaC,WAAWA,CAAA;;MAC7B,OACE,OAAOC,MAAM,KAAK,WAAW,IAC7B,OAAOC,MAAM,KAAK,WAAW,IAC7BC,OAAO,CAACD,MAAM,CAAC,IACfC,OAAO,CAACD,MAAM,CAACE,OAAO,CAAC,IACvBD,OAAO,CAACD,MAAM,CAACE,OAAO,CAACC,EAAE,CAAC;IAE9B,CAAC;;EAEYC,GAAGA,CAAuBC,GAAM;;MAC3C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;QAC7BP,MAAM,CAACQ,OAAO,CAACC,KAAK,CAACL,GAAG,CAAC,IAAI,EAAGM,cAAc,IAAI;UAChD,IAAIA,cAAc,CAACL,GAAG,CAAC,EAAE;YACvBE,OAAO,CAACG,cAAc,CAACL,GAAG,CAAC,CAAC;WAC7B,MAAM;YACL,IAAI,OAAOT,aAAa,CAACS,GAAG,CAAC,KAAK,QAAQ,EAAE;cAC1CE,OAAO,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACjB,aAAa,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;aACxD,MAAM;cACLE,OAAO,CAACX,aAAa,CAACS,GAAG,CAAC,CAAC;;;QAGjC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;;EAEYS,GAAGA,CAAuBT,GAAM,EAAEU,KAA8B;;MAC3E,OAAO,IAAIT,OAAO,CAAEC,OAAO,IAAI;QAC7BP,MAAM,CAACQ,OAAO,CAACC,KAAK,CAACK,GAAG,CAAC;UAAE,CAACT,GAAG,GAAGU;QAAK,CAAE,EAAE,MAAK;UAC9CR,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;;EAEYS,MAAMA,CAAuBX,GAAM;;MAC9C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;QAC7BP,MAAM,CAACQ,OAAO,CAACC,KAAK,CAACK,GAAG,CAAC;UAAE,CAACT,GAAG,GAAGY;QAAS,CAAE,EAAE,MAAK;UAClDV,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC"},"metadata":{},"sourceType":"module"}