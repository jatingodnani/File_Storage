{"ast":null,"code":"import { MatrixMessageType } from '../models/MatrixMessage';\n/**\n * Check if an event is a create event\n *\n * @param event MatrixStateEvent\n */\nexport const isCreateEvent = event => event.type === 'm.room.create' && event.content instanceof Object && 'creator' in event.content;\n/**\n * Check if an event is a join event\n *\n * @param event MatrixStateEvent\n */\nexport const isJoinEvent = event => event.type === 'm.room.member' && event.content instanceof Object && 'membership' in event.content &&\n// eslint-disable-next-line dot-notation\nevent.content['membership'] === 'join';\n/**\n * Check if an event is a message event\n *\n * @param event MatrixStateEvent\n */\nexport const isMessageEvent = event => event.type === 'm.room.message';\n/**\n * Check if an event is a text message event\n *\n * @param event MatrixStateEvent\n */\nexport const isTextMessageEvent = event => isMessageEvent(event) && event.content instanceof Object && 'msgtype' in event.content &&\n// eslint-disable-next-line dot-notation\nevent.content['msgtype'] === MatrixMessageType.TEXT;","map":{"version":3,"names":["MatrixMessageType","isCreateEvent","event","type","content","Object","isJoinEvent","isMessageEvent","isTextMessageEvent","TEXT"],"sources":["../../../../src/matrix-client/utils/events.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,iBAAiB,QAAQ,yBAAyB;AAE3D;;;;;AAKA,OAAO,MAAMC,aAAa,GAAIC,KAAuB,IACnDA,KAAK,CAACC,IAAI,KAAK,eAAe,IAAID,KAAK,CAACE,OAAO,YAAYC,MAAM,IAAI,SAAS,IAAIH,KAAK,CAACE,OAAO;AAEjG;;;;;AAKA,OAAO,MAAME,WAAW,GAAIJ,KAAuB,IACjDA,KAAK,CAACC,IAAI,KAAK,eAAe,IAC9BD,KAAK,CAACE,OAAO,YAAYC,MAAM,IAC/B,YAAY,IAAIH,KAAK,CAACE,OAAO;AAC7B;AACAF,KAAK,CAACE,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;AAExC;;;;;AAKA,OAAO,MAAMG,cAAc,GAAIL,KAAuB,IAAcA,KAAK,CAACC,IAAI,KAAK,gBAAgB;AAEnG;;;;;AAKA,OAAO,MAAMK,kBAAkB,GAAIN,KAAuB,IACxDK,cAAc,CAACL,KAAK,CAAC,IACrBA,KAAK,CAACE,OAAO,YAAYC,MAAM,IAC/B,SAAS,IAAIH,KAAK,CAACE,OAAO;AAC1B;AACAF,KAAK,CAACE,OAAO,CAAC,SAAS,CAAC,KAAKJ,iBAAiB,CAACS,IAAI"},"metadata":{},"sourceType":"module"}