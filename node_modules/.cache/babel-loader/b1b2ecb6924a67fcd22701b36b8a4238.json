{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { NetworkType } from '@airgap/beacon-types';\nimport { BlockExplorer } from './block-explorer';\nexport class TzktBlockExplorer extends BlockExplorer {\n  constructor() {\n    let rpcUrls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      [NetworkType.MAINNET]: 'https://tzkt.io',\n      [NetworkType.GHOSTNET]: 'https://ghostnet.tzkt.io',\n      [NetworkType.MONDAYNET]: 'https://mondaynet.tzkt.io',\n      [NetworkType.DAILYNET]: 'https://dailynet.tzkt.io',\n      [NetworkType.DELPHINET]: 'https://delphinet.tzkt.io',\n      [NetworkType.EDONET]: 'https://edonet.tzkt.io',\n      [NetworkType.FLORENCENET]: 'https://florencenet.tzkt.io',\n      [NetworkType.GRANADANET]: 'https://granadanet.tzkt.io',\n      [NetworkType.HANGZHOUNET]: 'https://hangzhounet.tzkt.io',\n      [NetworkType.ITHACANET]: 'https://ithacanet.tzkt.io',\n      [NetworkType.JAKARTANET]: 'https://jakartanet.tzkt.io',\n      [NetworkType.KATHMANDUNET]: 'https://kathmandunet.tzkt.io',\n      [NetworkType.LIMANET]: 'https://limanet.tzkt.io',\n      [NetworkType.MUMBAINET]: 'https://mumbainet.tzkt.io',\n      [NetworkType.CUSTOM]: 'https://mumbainet.tzkt.io'\n    };\n    super(rpcUrls);\n    this.rpcUrls = rpcUrls;\n  }\n  getAddressLink(address, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const blockExplorer = yield this.getLinkForNetwork(network);\n      return `${blockExplorer}/${address}`;\n    });\n  }\n  getTransactionLink(transactionId, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const blockExplorer = yield this.getLinkForNetwork(network);\n      return `${blockExplorer}/${transactionId}`;\n    });\n  }\n}","map":{"version":3,"names":["NetworkType","BlockExplorer","TzktBlockExplorer","constructor","rpcUrls","arguments","length","undefined","MAINNET","GHOSTNET","MONDAYNET","DAILYNET","DELPHINET","EDONET","FLORENCENET","GRANADANET","HANGZHOUNET","ITHACANET","JAKARTANET","KATHMANDUNET","LIMANET","MUMBAINET","CUSTOM","getAddressLink","address","network","blockExplorer","getLinkForNetwork","getTransactionLink","transactionId"],"sources":["../../../src/utils/tzkt-blockexplorer.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAkBA,WAAW,QAAQ,sBAAsB;AAC3D,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAM,MAAOC,iBAAkB,SAAQD,aAAa;EAClDE,YAAA,EAiBG;IAAA,IAhBeC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4C;MAC1D,CAACL,WAAW,CAACQ,OAAO,GAAG,iBAAiB;MACxC,CAACR,WAAW,CAACS,QAAQ,GAAG,0BAA0B;MAClD,CAACT,WAAW,CAACU,SAAS,GAAG,2BAA2B;MACpD,CAACV,WAAW,CAACW,QAAQ,GAAG,0BAA0B;MAClD,CAACX,WAAW,CAACY,SAAS,GAAG,2BAA2B;MACpD,CAACZ,WAAW,CAACa,MAAM,GAAG,wBAAwB;MAC9C,CAACb,WAAW,CAACc,WAAW,GAAG,6BAA6B;MACxD,CAACd,WAAW,CAACe,UAAU,GAAG,4BAA4B;MACtD,CAACf,WAAW,CAACgB,WAAW,GAAG,6BAA6B;MACxD,CAAChB,WAAW,CAACiB,SAAS,GAAG,2BAA2B;MACpD,CAACjB,WAAW,CAACkB,UAAU,GAAG,4BAA4B;MACtD,CAAClB,WAAW,CAACmB,YAAY,GAAG,8BAA8B;MAC1D,CAACnB,WAAW,CAACoB,OAAO,GAAG,yBAAyB;MAChD,CAACpB,WAAW,CAACqB,SAAS,GAAG,2BAA2B;MACpD,CAACrB,WAAW,CAACsB,MAAM,GAAG;KACvB;IAED,KAAK,CAAClB,OAAO,CAAC;IAlBE,KAAAA,OAAO,GAAPA,OAAO;EAmBzB;EAEamB,cAAcA,CAACC,OAAe,EAAEC,OAAgB;;MAC3D,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAACF,OAAO,CAAC;MAE3D,OAAO,GAAGC,aAAa,IAAIF,OAAO,EAAE;IACtC,CAAC;;EACYI,kBAAkBA,CAACC,aAAqB,EAAEJ,OAAgB;;MACrE,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAACF,OAAO,CAAC;MAE3D,OAAO,GAAGC,aAAa,IAAIG,aAAa,EAAE;IAC5C,CAAC"},"metadata":{},"sourceType":"module"}