{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { StorageKey } from '@airgap/beacon-types';\nimport { StorageManager } from './StorageManager';\nimport { PermissionValidator } from './PermissionValidator';\n/**\n * @internalapi\n *\n * The AccountManager provides CRUD functionality for account entities and persists them to the provided storage.\n */\nexport class AccountManager {\n  constructor(storage) {\n    this.storageManager = new StorageManager(storage, StorageKey.ACCOUNTS);\n  }\n  getAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getAll();\n    });\n  }\n  getAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getOne(account => account.accountIdentifier === accountIdentifier);\n    });\n  }\n  addAccount(accountInfo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.addOne(accountInfo, account => account.accountIdentifier === accountInfo.accountIdentifier);\n    });\n  }\n  removeAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(account => account.accountIdentifier === accountIdentifier);\n    });\n  }\n  removeAccounts(accountIdentifiers) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(account => accountIdentifiers.includes(account.accountIdentifier));\n    });\n  }\n  removeAllAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.removeAll();\n    });\n  }\n  hasPermission(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return PermissionValidator.hasPermission(message, this.getAccount.bind(this), this.getAccounts.bind(this));\n    });\n  }\n}","map":{"version":3,"names":["StorageKey","StorageManager","PermissionValidator","AccountManager","constructor","storage","storageManager","ACCOUNTS","getAccounts","getAll","getAccount","accountIdentifier","getOne","account","addAccount","accountInfo","addOne","removeAccount","remove","removeAccounts","accountIdentifiers","includes","removeAllAccounts","removeAll","hasPermission","message","bind"],"sources":["../../../src/managers/AccountManager.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAkBA,UAAU,QAAoC,sBAAsB;AACtF,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D;;;;;AAKA,OAAM,MAAOC,cAAc;EAGzBC,YAAYC,OAAgB;IAC1B,IAAI,CAACC,cAAc,GAAG,IAAIL,cAAc,CAACI,OAAO,EAAEL,UAAU,CAACO,QAAQ,CAAC;EACxE;EAEaC,WAAWA,CAAA;;MACtB,OAAO,IAAI,CAACF,cAAc,CAACG,MAAM,EAAE;IACrC,CAAC;;EAEYC,UAAUA,CAACC,iBAAyB;;MAC/C,OAAO,IAAI,CAACL,cAAc,CAACM,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACF,iBAAiB,KAAKA,iBAAiB,CAAC;IACjG,CAAC;;EAEYG,UAAUA,CAACC,WAAwB;;MAC9C,OAAO,IAAI,CAACT,cAAc,CAACU,MAAM,CAC/BD,WAAW,EACVF,OAAO,IAAKA,OAAO,CAACF,iBAAiB,KAAKI,WAAW,CAACJ,iBAAiB,CACzE;IACH,CAAC;;EAEYM,aAAaA,CAACN,iBAAyB;;MAClD,OAAO,IAAI,CAACL,cAAc,CAACY,MAAM,CAAEL,OAAO,IAAKA,OAAO,CAACF,iBAAiB,KAAKA,iBAAiB,CAAC;IACjG,CAAC;;EAEYQ,cAAcA,CAACC,kBAA4B;;MACtD,OAAO,IAAI,CAACd,cAAc,CAACY,MAAM,CAAEL,OAAO,IACxCO,kBAAkB,CAACC,QAAQ,CAACR,OAAO,CAACF,iBAAiB,CAAC,CACvD;IACH,CAAC;;EAEYW,iBAAiBA,CAAA;;MAC5B,OAAO,IAAI,CAAChB,cAAc,CAACiB,SAAS,EAAE;IACxC,CAAC;;EAEYC,aAAaA,CAACC,OAAsB;;MAC/C,OAAOvB,mBAAmB,CAACsB,aAAa,CACtCC,OAAO,EACP,IAAI,CAACf,UAAU,CAACgB,IAAI,CAAC,IAAI,CAAC,EAC1B,IAAI,CAAClB,WAAW,CAACkB,IAAI,CAAC,IAAI,CAAC,CAC5B;IACH,CAAC"},"metadata":{},"sourceType":"module"}