{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { Serializer } from '@airgap/beacon-core';\nimport { ExtensionMessageTarget, NetworkType } from '@airgap/beacon-types';\nimport { windowRef } from '@airgap/beacon-core';\nimport { getTzip10Link } from '../../utils/get-tzip10-link';\nimport { isAndroid, isIOS } from '../../utils/platform';\nimport { PostMessageTransport } from '@airgap/beacon-transport-postmessage';\nimport { desktopList, extensionList, iOSList, webList } from './wallet-lists';\n/**\n * Initialize with tezos wallets for backwards compatibility\n */\nlet localDesktopList = desktopList;\nlet localExtensionList = extensionList;\nlet localWebList = webList;\nlet localiOSList = iOSList;\nexport const getDesktopList = () => {\n  return localDesktopList;\n};\nexport const setDesktopList = desktopList => {\n  localDesktopList = desktopList;\n};\nexport const getExtensionList = () => {\n  return localExtensionList;\n};\nexport const setExtensionList = extensionList => {\n  localExtensionList = extensionList;\n};\nexport const getWebList = () => {\n  return localWebList;\n};\nexport const setWebList = webList => {\n  localWebList = webList;\n};\nexport const getiOSList = () => {\n  return localiOSList;\n};\nexport const setiOSList = iosList => {\n  localiOSList = iosList;\n};\nconst serializer = new Serializer();\nconst defaultExtensions = ['ookjlbkiijinhpmnjffcofjonbfbgaoc', 'gpfndedineagiepkpinficbcbbgjoenn' // Spire\n];\n\nexport var Platform;\n(function (Platform) {\n  Platform[Platform[\"DESKTOP\"] = 0] = \"DESKTOP\";\n  Platform[Platform[\"IOS\"] = 1] = \"IOS\";\n  Platform[Platform[\"ANDROID\"] = 2] = \"ANDROID\";\n})(Platform || (Platform = {}));\nexport var WalletType;\n(function (WalletType) {\n  WalletType[\"IOS\"] = \"ios\";\n  WalletType[\"ANDROID\"] = \"android\";\n  WalletType[\"EXTENSION\"] = \"extension\";\n  WalletType[\"DESKTOP\"] = \"desktop\";\n  WalletType[\"WEB\"] = \"web\";\n})(WalletType || (WalletType = {}));\n/**\n * @internalapi\n *\n */\nexport class Pairing {\n  static getPlatfrom() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return isAndroid(window) ? Platform.ANDROID : isIOS(window) ? Platform.IOS : Platform.DESKTOP;\n    });\n  }\n  static getPairingInfo(pairingPayload, statusUpdateHandler, mobileWalletHandler, platform) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const activePlatform = platform !== null && platform !== void 0 ? platform : yield Pairing.getPlatfrom();\n      const pairingCode = pairingPayload.p2pSyncCode;\n      const postmessageSyncCode = pairingPayload.postmessageSyncCode;\n      const preferredNetwork = pairingPayload.preferredNetwork;\n      switch (activePlatform) {\n        case Platform.DESKTOP:\n          return Pairing.getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, preferredNetwork);\n        case Platform.IOS:\n          return Pairing.getIOSPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork);\n        case Platform.ANDROID:\n          return Pairing.getAndroidPairingAlert(pairingCode, statusUpdateHandler, preferredNetwork);\n        default:\n          throw new Error('platform unknown');\n      }\n    });\n  }\n  static getDesktopPairingAlert(pairingCode, statusUpdateHandler, postmessageSyncCode, mobileWalletHandler, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const availableExtensions = yield PostMessageTransport.getAvailableExtensions();\n      availableExtensions.forEach(ext => {\n        const index = defaultExtensions.indexOf(ext.id);\n        if (index >= 0) {\n          defaultExtensions.splice(index, 1);\n        }\n      });\n      const walletLists = [];\n      if (getExtensionList().length > 0) {\n        walletLists.push({\n          title: 'Browser Extensions',\n          type: WalletType.EXTENSION,\n          wallets: [...availableExtensions.map(app => {\n            var _a, _b, _c, _d, _e;\n            const ext = getExtensionList().find(extEl => extEl.id === app.id);\n            return {\n              key: (_a = ext === null || ext === void 0 ? void 0 : ext.key) !== null && _a !== void 0 ? _a : app.id,\n              name: (_b = app.name) !== null && _b !== void 0 ? _b : ext === null || ext === void 0 ? void 0 : ext.name,\n              logo: (_c = app.iconUrl) !== null && _c !== void 0 ? _c : ext === null || ext === void 0 ? void 0 : ext.logo,\n              shortName: (_d = app.shortName) !== null && _d !== void 0 ? _d : ext === null || ext === void 0 ? void 0 : ext.shortName,\n              color: (_e = app.color) !== null && _e !== void 0 ? _e : ext === null || ext === void 0 ? void 0 : ext.color,\n              enabled: true,\n              clicked: false,\n              clickHandler() {\n                return __awaiter(this, void 0, void 0, function* () {\n                  if (this.clicked) {\n                    return;\n                  }\n                  this.clicked = true;\n                  if (postmessageSyncCode) {\n                    const postmessageCode = yield serializer.serialize(yield postmessageSyncCode());\n                    const message = {\n                      target: ExtensionMessageTarget.EXTENSION,\n                      payload: postmessageCode,\n                      targetId: app.id\n                    };\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    windowRef.postMessage(message, windowRef.location.origin);\n                  }\n                  statusUpdateHandler(WalletType.EXTENSION, this);\n                });\n              }\n            };\n          }), ...getExtensionList().filter(app => defaultExtensions.some(extId => extId === app.id)).map(app => ({\n            key: app.key,\n            name: app.name,\n            shortName: app.shortName,\n            color: app.color,\n            logo: app.logo,\n            enabled: false,\n            clickHandler: () => {\n              // Open wallet page\n              window.open(app.link, '_blank');\n            }\n          }))].sort((a, b) => a.key.localeCompare(b.key))\n        });\n      }\n      if (getDesktopList().length > 0) {\n        walletLists.push({\n          title: 'Desktop & Web Wallets',\n          type: WalletType.DESKTOP,\n          wallets: [...getDesktopList().map(app => ({\n            key: app.key,\n            name: app.name,\n            shortName: app.shortName,\n            color: app.color,\n            logo: app.logo,\n            enabled: true,\n            clicked: false,\n            clickHandler() {\n              return __awaiter(this, void 0, void 0, function* () {\n                if (this.clicked) {\n                  return;\n                }\n                this.clicked = true;\n                const code = yield serializer.serialize(yield pairingCode());\n                const link = getTzip10Link(app.deepLink, code);\n                window.open(link, '_blank');\n                statusUpdateHandler(WalletType.DESKTOP, this, true);\n              });\n            }\n          })), ...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))].sort((a, b) => a.key.localeCompare(b.key))\n        });\n      }\n      if (getiOSList().length > 0) {\n        walletLists.push({\n          title: 'Mobile Wallets',\n          type: WalletType.IOS,\n          wallets: [...getiOSList().map(app => ({\n            key: app.key,\n            name: app.name,\n            shortName: app.shortName,\n            color: app.color,\n            logo: app.logo,\n            enabled: true,\n            clicked: false,\n            clickHandler() {\n              return __awaiter(this, void 0, void 0, function* () {\n                if (this.clicked) {\n                  return;\n                }\n                this.clicked = true;\n                const code = yield serializer.serialize(yield pairingCode());\n                mobileWalletHandler(code);\n                statusUpdateHandler(WalletType.IOS, this, true);\n              });\n            }\n          }))].sort((a, b) => a.key.localeCompare(b.key))\n        });\n      }\n      return {\n        walletLists,\n        buttons: []\n      };\n    });\n  }\n  static getIOSPairingAlert(pairingCode, statusUpdateHandler, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return {\n        walletLists: [{\n          title: 'Mobile Wallets',\n          type: WalletType.IOS,\n          wallets: getiOSList().map(app => ({\n            key: app.key,\n            name: app.name,\n            shortName: app.shortName,\n            color: app.color,\n            logo: app.logo,\n            enabled: true,\n            clicked: false,\n            clickHandler() {\n              var _a;\n              return __awaiter(this, void 0, void 0, function* () {\n                if (this.clicked) {\n                  return;\n                }\n                this.clicked = true;\n                const code = yield serializer.serialize(yield pairingCode());\n                const link = getTzip10Link((_a = app.deepLink) !== null && _a !== void 0 ? _a : app.universalLink, code);\n                // iOS does not trigger deeplinks with `window.open(...)`. The only way is using a normal link. So we have to work around that.\n                const a = document.createElement('a');\n                a.setAttribute('href', link);\n                a.dispatchEvent(new MouseEvent('click', {\n                  view: window,\n                  bubbles: true,\n                  cancelable: true\n                }));\n                statusUpdateHandler(WalletType.IOS, this, true);\n              });\n            }\n          })).sort((a, b) => a.key.localeCompare(b.key))\n        }, {\n          title: 'Web Wallets',\n          type: WalletType.WEB,\n          wallets: [...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))].sort((a, b) => a.key.localeCompare(b.key))\n        }],\n        buttons: []\n      };\n    });\n  }\n  static getAndroidPairingAlert(pairingCode, statusUpdateHandler, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return {\n        walletLists: [{\n          title: 'Web Wallets',\n          type: WalletType.WEB,\n          wallets: [...(yield Pairing.getWebList(pairingCode, statusUpdateHandler, network))].sort((a, b) => a.key.localeCompare(b.key))\n        }],\n        buttons: [{\n          title: 'Mobile Wallets',\n          text: 'Connect Wallet',\n          clickHandler: () => __awaiter(this, void 0, void 0, function* () {\n            const code = yield serializer.serialize(yield pairingCode());\n            const qrLink = getTzip10Link('tezos://', code);\n            window.open(qrLink, '_blank');\n            statusUpdateHandler(WalletType.ANDROID);\n          })\n        }]\n      };\n    });\n  }\n  static getWebList(pairingCode, statusUpdateHandler, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return getWebList().map(app => ({\n        key: app.key,\n        name: app.name,\n        shortName: app.shortName,\n        color: app.color,\n        logo: app.logo,\n        enabled: true,\n        clicked: false,\n        clickHandler() {\n          if (this.clicked) {\n            return;\n          }\n          this.clicked = true;\n          const newTab = window.open('', '_blank');\n          pairingCode().then(code => serializer.serialize(code)).then(code => {\n            var _a;\n            const link = getTzip10Link((_a = app.links[network]) !== null && _a !== void 0 ? _a : app.links[NetworkType.MAINNET], code);\n            if (newTab) {\n              newTab.location.href = link;\n            } else {\n              window.open(link, '_blank');\n            }\n            statusUpdateHandler(WalletType.WEB, this, true);\n          }).catch(error => {\n            // eslint-disable-next-line no-console\n            console.error(error);\n          });\n        }\n      })).sort((a, b) => a.key.localeCompare(b.key));\n    });\n  }\n}","map":{"version":3,"names":["Serializer","ExtensionMessageTarget","NetworkType","windowRef","getTzip10Link","isAndroid","isIOS","PostMessageTransport","desktopList","extensionList","iOSList","webList","localDesktopList","localExtensionList","localWebList","localiOSList","getDesktopList","setDesktopList","getExtensionList","setExtensionList","getWebList","setWebList","getiOSList","setiOSList","iosList","serializer","defaultExtensions","Platform","WalletType","Pairing","getPlatfrom","window","ANDROID","IOS","DESKTOP","getPairingInfo","pairingPayload","statusUpdateHandler","mobileWalletHandler","platform","activePlatform","pairingCode","p2pSyncCode","postmessageSyncCode","preferredNetwork","getDesktopPairingAlert","getIOSPairingAlert","getAndroidPairingAlert","Error","network","availableExtensions","getAvailableExtensions","forEach","ext","index","indexOf","id","splice","walletLists","length","push","title","type","EXTENSION","wallets","map","app","find","extEl","key","_a","name","_b","logo","_c","iconUrl","shortName","_d","color","_e","enabled","clicked","clickHandler","postmessageCode","serialize","message","target","payload","targetId","postMessage","location","origin","filter","some","extId","open","link","sort","a","b","localeCompare","code","deepLink","buttons","universalLink","document","createElement","setAttribute","dispatchEvent","MouseEvent","view","bubbles","cancelable","WEB","text","__awaiter","qrLink","newTab","then","links","MAINNET","href","catch","error","console"],"sources":["../../../../src/ui/alert/Pairing.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}