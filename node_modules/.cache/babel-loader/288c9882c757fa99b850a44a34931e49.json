{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ExposedPromise, ExposedPromiseStatus, generateGUID } from '@airgap/beacon-utils';\nimport { TransportStatus, BeaconMessageType } from '@airgap/beacon-types';\nimport { Serializer } from '../..';\nimport { BeaconClient } from '../beacon-client/BeaconClient';\nimport { AccountManager } from '../../managers/AccountManager';\nimport { getSenderId } from '../../utils/get-sender-id';\nimport { Logger } from '../../utils/Logger';\nconst logger = new Logger('Client');\n/**\n * @internalapi\n *\n * This abstract class handles the a big part of the logic that is shared between the dapp and wallet client.\n * For example, it selects and manages the transport and accounts.\n */\nexport class Client extends BeaconClient {\n  constructor(config) {\n    var _a;\n    super(config);\n    /**\n     * How many requests can be sent after another\n     */\n    this.rateLimit = 2;\n    /**\n     * The time window in seconds in which the \"rateLimit\" is checked\n     */\n    this.rateLimitWindowInSeconds = 5;\n    /**\n     * Stores the times when requests have been made to determine if the rate limit has been reached\n     */\n    this.requestCounter = [];\n    this._transport = new ExposedPromise();\n    this.accountManager = new AccountManager(config.storage);\n    this.matrixNodes = (_a = config.matrixNodes) !== null && _a !== void 0 ? _a : {};\n    this.handleResponse = (message, connectionInfo) => {\n      throw new Error(`not overwritten${JSON.stringify(message)} - ${JSON.stringify(connectionInfo)}`);\n    };\n  }\n  get transport() {\n    return this._transport.promise;\n  }\n  /**\n   * Returns the connection status of the Client\n   */\n  get connectionStatus() {\n    var _a, _b;\n    return (_b = (_a = this._transport.promiseResult) === null || _a === void 0 ? void 0 : _a.connectionStatus) !== null && _b !== void 0 ? _b : TransportStatus.NOT_CONNECTED;\n  }\n  /**\n   * Returns whether or not the transaport is ready\n   */\n  get ready() {\n    return this.transport.then(() => undefined);\n  }\n  /**\n   * Return all locally known accounts\n   */\n  getAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.accountManager.getAccounts();\n    });\n  }\n  /**\n   * Return the account by ID\n   * @param accountIdentifier The ID of an account\n   */\n  getAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.accountManager.getAccount(accountIdentifier);\n    });\n  }\n  /**\n   * Remove the account by ID\n   * @param accountIdentifier The ID of an account\n   */\n  removeAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.accountManager.removeAccount(accountIdentifier);\n    });\n  }\n  /**\n   * Remove all locally stored accounts\n   */\n  removeAllAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.accountManager.removeAllAccounts();\n    });\n  }\n  /**\n   * Add a new request (current timestamp) to the pending requests, remove old ones and check if we are above the limit\n   */\n  addRequestAndCheckIfRateLimited() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const now = new Date().getTime();\n      this.requestCounter = this.requestCounter.filter(date => date + this.rateLimitWindowInSeconds * 1000 > now);\n      this.requestCounter.push(now);\n      return this.requestCounter.length > this.rateLimit;\n    });\n  }\n  /**\n   * This method initializes the client. It will check if the connection should be established to a\n   * browser extension or if the P2P transport should be used.\n   *\n   * @param transport A transport that can be provided by the user\n   */\n  init(transport) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._transport.status === ExposedPromiseStatus.RESOLVED) {\n        return (yield this.transport).type;\n      }\n      yield this.setTransport(transport); // Let users define their own transport\n      return transport.type;\n    });\n  }\n  /**\n   * Returns the metadata of this DApp\n   */\n  getOwnAppMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return {\n        senderId: yield getSenderId(yield this.beaconId),\n        name: this.name,\n        icon: this.iconUrl\n      };\n    });\n  }\n  /**\n   * Return all known peers\n   */\n  getPeers() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.transport).getPeers();\n    });\n  }\n  /**\n   * Add a new peer to the known peers\n   * @param peer The new peer to add\n   */\n  addPeer(peer) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.transport).addPeer(peer);\n    });\n  }\n  destroy() {\n    const _super = Object.create(null, {\n      destroy: {\n        get: () => super.destroy\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._transport.status === ExposedPromiseStatus.RESOLVED) {\n        yield (yield this.transport).disconnect();\n      }\n      yield _super.destroy.call(this);\n    });\n  }\n  /**\n   * A \"setter\" for when the transport needs to be changed.\n   */\n  setTransport(transport) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (transport) {\n        if (this._transport.isSettled()) {\n          // If the promise has already been resolved we need to create a new one.\n          this._transport = ExposedPromise.resolve(transport);\n        } else {\n          this._transport.resolve(transport);\n        }\n      } else {\n        if (this._transport.isSettled()) {\n          // If the promise has already been resolved we need to create a new one.\n          this._transport = new ExposedPromise();\n        }\n      }\n    });\n  }\n  addListener(transport) {\n    return __awaiter(this, void 0, void 0, function* () {\n      transport.addListener((message, connectionInfo) => __awaiter(this, void 0, void 0, function* () {\n        if (typeof message === 'string') {\n          const deserializedMessage = yield new Serializer().deserialize(message);\n          this.handleResponse(deserializedMessage, connectionInfo);\n        }\n      })).catch(error => logger.error('addListener', error));\n    });\n  }\n  sendDisconnectToPeer(peer, transport) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = {\n        id: yield generateGUID(),\n        version: peer.version,\n        senderId: yield getSenderId(yield this.beaconId),\n        type: BeaconMessageType.Disconnect\n      };\n      const payload = yield new Serializer().serialize(request);\n      const selectedTransport = transport !== null && transport !== void 0 ? transport : yield this.transport;\n      yield selectedTransport.send(payload, peer);\n    });\n  }\n}","map":{"version":3,"names":["ExposedPromise","ExposedPromiseStatus","generateGUID","TransportStatus","BeaconMessageType","Serializer","BeaconClient","AccountManager","getSenderId","Logger","logger","Client","constructor","config","rateLimit","rateLimitWindowInSeconds","requestCounter","_transport","accountManager","storage","matrixNodes","_a","handleResponse","message","connectionInfo","Error","JSON","stringify","transport","promise","connectionStatus","_b","promiseResult","NOT_CONNECTED","ready","then","undefined","getAccounts","getAccount","accountIdentifier","removeAccount","removeAllAccounts","addRequestAndCheckIfRateLimited","now","Date","getTime","filter","date","push","length","init","status","RESOLVED","type","setTransport","getOwnAppMetadata","senderId","beaconId","name","icon","iconUrl","getPeers","addPeer","peer","destroy","disconnect","_super","call","isSettled","resolve","addListener","__awaiter","deserializedMessage","deserialize","catch","error","sendDisconnectToPeer","request","id","version","Disconnect","payload","serialize","selectedTransport","send"],"sources":["../../../../src/clients/client/Client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}