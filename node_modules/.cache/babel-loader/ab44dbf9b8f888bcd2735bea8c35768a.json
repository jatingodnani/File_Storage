{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as bs58check from 'bs58check';\n/**\n * @internalapi\n *\n * The Serializer is used to serialize / deserialize JSON objects and encode them with bs58check\n */\nexport class Serializer {\n  /**\n   * Serialize and bs58check encode an object\n   *\n   * @param message JSON object to serialize\n   */\n  serialize(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const str = JSON.stringify(message);\n      return bs58check.encode(Buffer.from(str));\n    });\n  }\n  /**\n   * Deserialize a bs58check encoded string\n   *\n   * @param encoded String to be deserialized\n   */\n  deserialize(encoded) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof encoded !== 'string') {\n        throw new Error('Encoded payload needs to be a string');\n      }\n      return JSON.parse(bs58check.decode(encoded).toString());\n    });\n  }\n}","map":{"version":3,"names":["bs58check","Serializer","serialize","message","str","JSON","stringify","encode","Buffer","from","deserialize","encoded","Error","parse","decode","toString"],"sources":["../../src/Serializer.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,SAAS,MAAM,WAAW;AAEtC;;;;;AAKA,OAAM,MAAOC,UAAU;EACrB;;;;;EAKaC,SAASA,CAACC,OAAgB;;MACrC,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;MAEnC,OAAOH,SAAS,CAACO,MAAM,CAACC,MAAM,CAACC,IAAI,CAACL,GAAG,CAAC,CAAC;IAC3C,CAAC;;EAED;;;;;EAKaM,WAAWA,CAACC,OAAe;;MACtC,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;;MAGzD,OAAOP,IAAI,CAACQ,KAAK,CAACb,SAAS,CAACc,MAAM,CAACH,OAAO,CAAC,CAACI,QAAQ,EAAE,CAAC;IACzD,CAAC"},"metadata":{},"sourceType":"module"}