{"ast":null,"code":"var _jsxFileName = \"F:\\\\Jatin\\\\project\\\\Contracts\\\\Lottery_full\\\\lottery-dapp-boilerplate-complete\\\\src\\\\components\\\\FileUpload.js\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.css\";\nimport account from \"./Navbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconstFileUpload = _ref => {\n  let {\n    account\n  } = _ref;\n  //   const [file, setFile] = useState(null);\n  //   const [fileName, setFileName] = useState(\"No image selected\");\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    // if (file) {\n    //   try {\n    //     const formData = new FormData();\n    //     formData.append(\"file\", file);\n\n    //     const resFile = await axios({\n    //       method: \"post\",\n    //       url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n    //       data: formData,\n    //       headers: {\n    //         pinata_api_key: `Enter Your Key`,\n    //         pinata_secret_api_key: `Enter Your Secret Key`,\n    //         \"Content-Type\": \"multipart/form-data\",\n    //       },\n    //     });\n    //     const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\n    //     //const signer = contract.connect(provider.getSigner());\n    //     const signer = contract.connect(provider.getSigner());\n    //     signer.add(account, ImgHash);\n    //   } catch (e) {\n    //     alert(\"Unable to upload image to Pinata\");\n    //   }\n    // }\n    // alert(\"Successfully Image Uploaded\");\n    // setFileName(\"No image selected\");\n    // setFile(null);\n  };\n  const retrieveFile = e => {\n    // const data = e.target.files[0]; //files array of files object\n    // // console.log(data);\n    // const reader = new window.FileReader();\n    // reader.readAsArrayBuffer(data);\n    // reader.onloadend = () => {\n    //   setFile(e.target.files[0]);\n    // };\n    // setFileName(e.target.files[0].name);\n    // e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"choose\",\n        children: \"Choose Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: !account,\n        type: \"file\",\n        id: \"file-upload\",\n        name: \"data\",\n        onChange: retrieveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"textArea\",\n        children: \"Image:#temporary.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\nexport default FileUpload;","map":{"version":3,"names":["useState","axios","account","jsxDEV","_jsxDEV","constFileUpload","_ref","handleSubmit","e","retrieveFile","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","disabled","type","id","name","onChange","FileUpload"],"sources":["F:/Jatin/project/Contracts/Lottery_full/lottery-dapp-boilerplate-complete/src/components/FileUpload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\nimport account from \"./Navbar.js\";\r\n\r\nconstFileUpload = ({account}) => {\r\n//   const [file, setFile] = useState(null);\r\n//   const [fileName, setFileName] = useState(\"No image selected\");\r\n  const handleSubmit = async (e) => {\r\n    // e.preventDefault();\r\n    // if (file) {\r\n    //   try {\r\n    //     const formData = new FormData();\r\n    //     formData.append(\"file\", file);\r\n\r\n    //     const resFile = await axios({\r\n    //       method: \"post\",\r\n    //       url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n    //       data: formData,\r\n    //       headers: {\r\n    //         pinata_api_key: `Enter Your Key`,\r\n    //         pinata_secret_api_key: `Enter Your Secret Key`,\r\n    //         \"Content-Type\": \"multipart/form-data\",\r\n    //       },\r\n    //     });\r\n    //     const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n    //     //const signer = contract.connect(provider.getSigner());\r\n    //     const signer = contract.connect(provider.getSigner());\r\n    //     signer.add(account, ImgHash);\r\n    //   } catch (e) {\r\n    //     alert(\"Unable to upload image to Pinata\");\r\n    //   }\r\n    // }\r\n    // alert(\"Successfully Image Uploaded\");\r\n    // setFileName(\"No image selected\");\r\n    // setFile(null);\r\n  };\r\n  const retrieveFile = (e) => {\r\n    // const data = e.target.files[0]; //files array of files object\r\n    // // console.log(data);\r\n    // const reader = new window.FileReader();\r\n    // reader.readAsArrayBuffer(data);\r\n    // reader.onloadend = () => {\r\n    //   setFile(e.target.files[0]);\r\n    // };\r\n    // setFileName(e.target.files[0].name);\r\n    // e.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"top\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"file-upload\" className=\"choose\">\r\n          Choose Image\r\n        </label>\r\n        <input\r\n          disabled={!account}\r\n          type=\"file\"\r\n          id=\"file-upload\"\r\n          name=\"data\"\r\n          onChange={retrieveFile}\r\n        />\r\n        <span className=\"textArea\">Image:#temporary.png</span>\r\n        <button type=\"submit\" className=\"upload\">\r\n          {/* Upload File */}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default FileUpload;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCC,eAAe,GAAGC,IAAA,IAAe;EAAA,IAAd;IAACJ;EAAO,CAAC,GAAAI,IAAA;EAC5B;EACA;EACE,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACD,MAAMC,YAAY,GAAID,CAAC,IAAK;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACD,oBACEJ,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBP,OAAA;MAAMM,SAAS,EAAC,MAAM;MAACE,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBAC5CP,OAAA;QAAOS,OAAO,EAAC,aAAa;QAACH,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAEhD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACRb,OAAA;QACEc,QAAQ,EAAE,CAAChB,OAAQ;QACnBiB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,aAAa;QAChBC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEb;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,eACFb,OAAA;QAAMM,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACtDb,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACT,SAAS,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AACD,eAAeM,UAAU"},"metadata":{},"sourceType":"module"}