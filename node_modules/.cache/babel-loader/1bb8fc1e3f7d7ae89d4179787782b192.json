{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2017 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.BLOCK_SIZE = 128;\nexports.DIGEST_LENGTH = 64;\nexports.KEY_LENGTH = 64;\nexports.PERSONALIZATION_LENGTH = 16;\nexports.SALT_LENGTH = 16;\nexports.MAX_LEAF_SIZE = Math.pow(2, 32) - 1;\nexports.MAX_FANOUT = 255;\nexports.MAX_MAX_DEPTH = 255; // not a typo\nvar IV = new Uint32Array([\n// low bits // high bits\n0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]);\n// Note: sigma values are doubled since we store\n// 64-bit ints as two 32-bit ints in arrays.\nvar SIGMA = [[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30], [28, 20, 8, 16, 18, 30, 26, 12, 2, 24, 0, 4, 22, 14, 10, 6], [22, 16, 24, 0, 10, 4, 30, 26, 20, 28, 6, 12, 14, 2, 18, 8], [14, 18, 6, 2, 26, 24, 22, 28, 4, 12, 10, 20, 8, 0, 30, 16], [18, 0, 10, 14, 4, 8, 20, 30, 28, 2, 22, 24, 12, 16, 6, 26], [4, 24, 12, 20, 0, 22, 16, 6, 8, 26, 14, 10, 30, 28, 2, 18], [24, 10, 2, 30, 28, 26, 8, 20, 0, 14, 12, 6, 18, 4, 16, 22], [26, 22, 14, 28, 24, 2, 6, 18, 10, 0, 30, 8, 16, 12, 4, 20], [12, 30, 28, 18, 22, 6, 0, 16, 24, 4, 26, 14, 2, 8, 20, 10], [20, 4, 16, 8, 14, 12, 2, 10, 30, 22, 18, 28, 6, 24, 26, 0], [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30], [28, 20, 8, 16, 18, 30, 26, 12, 2, 24, 0, 4, 22, 14, 10, 6]];\n/**\n * BLAKE2b hash function.\n */\nvar BLAKE2b = /** @class */function () {\n  function BLAKE2b(digestLength, config) {\n    if (digestLength === void 0) {\n      digestLength = 64;\n    }\n    this.digestLength = digestLength;\n    this.blockSize = exports.BLOCK_SIZE;\n    // Note: Int32Arrays for state and message are used for performance reasons.\n    this._state = new Int32Array(IV); // hash state, initialized with IV\n    this._buffer = new Uint8Array(exports.BLOCK_SIZE); // buffer for data\n    this._bufferLength = 0; // number of bytes in buffer\n    this._ctr = new Uint32Array(4);\n    this._flag = new Uint32Array(4);\n    this._lastNode = false;\n    this._finished = false;\n    this._vtmp = new Uint32Array(32);\n    this._mtmp = new Uint32Array(32);\n    // Validate digest length.\n    if (digestLength < 1 || digestLength > exports.DIGEST_LENGTH) {\n      throw new Error(\"blake2b: wrong digest length\");\n    }\n    // Validate config, if present.\n    if (config) {\n      this.validateConfig(config);\n    }\n    // Get key length from config.\n    var keyLength = 0;\n    if (config && config.key) {\n      keyLength = config.key.length;\n    }\n    // Get tree fanout and maxDepth from config.\n    var fanout = 1;\n    var maxDepth = 1;\n    if (config && config.tree) {\n      fanout = config.tree.fanout;\n      maxDepth = config.tree.maxDepth;\n    }\n    // Xor common parameters into state.\n    this._state[0] ^= digestLength | keyLength << 8 | fanout << 16 | maxDepth << 24;\n    // Xor tree parameters into state.\n    if (config && config.tree) {\n      this._state[1] ^= config.tree.leafSize;\n      this._state[2] ^= config.tree.nodeOffsetLowBits;\n      this._state[3] ^= config.tree.nodeOffsetHighBits;\n      this._state[4] ^= config.tree.nodeDepth | config.tree.innerDigestLength << 8;\n      this._lastNode = config.tree.lastNode;\n    }\n    // Xor salt into state.\n    if (config && config.salt) {\n      this._state[8] ^= binary_1.readUint32LE(config.salt, 0);\n      this._state[9] ^= binary_1.readUint32LE(config.salt, 4);\n      this._state[10] ^= binary_1.readUint32LE(config.salt, 8);\n      this._state[11] ^= binary_1.readUint32LE(config.salt, 12);\n    }\n    // Xor personalization into state.\n    if (config && config.personalization) {\n      this._state[12] ^= binary_1.readUint32LE(config.personalization, 0);\n      this._state[13] ^= binary_1.readUint32LE(config.personalization, 4);\n      this._state[14] ^= binary_1.readUint32LE(config.personalization, 8);\n      this._state[15] ^= binary_1.readUint32LE(config.personalization, 12);\n    }\n    // Save a copy of initialized state for reset.\n    this._initialState = new Uint32Array(this._state);\n    // Process key.\n    if (config && config.key && keyLength > 0) {\n      this._paddedKey = new Uint8Array(exports.BLOCK_SIZE);\n      this._paddedKey.set(config.key);\n      // Put padded key into buffer.\n      this._buffer.set(this._paddedKey);\n      this._bufferLength = exports.BLOCK_SIZE;\n    }\n  }\n  BLAKE2b.prototype.reset = function () {\n    // Restore initial state.\n    this._state.set(this._initialState);\n    if (this._paddedKey) {\n      // Put padded key into buffer.\n      this._buffer.set(this._paddedKey);\n      this._bufferLength = exports.BLOCK_SIZE;\n    } else {\n      this._bufferLength = 0;\n    }\n    // Clear counters and flags.\n    wipe_1.wipe(this._ctr);\n    wipe_1.wipe(this._flag);\n    this._finished = false;\n    return this;\n  };\n  BLAKE2b.prototype.validateConfig = function (config) {\n    if (config.key && config.key.length > exports.KEY_LENGTH) {\n      throw new Error(\"blake2b: wrong key length\");\n    }\n    if (config.salt && config.salt.length !== exports.SALT_LENGTH) {\n      throw new Error(\"blake2b: wrong salt length\");\n    }\n    if (config.personalization && config.personalization.length !== exports.PERSONALIZATION_LENGTH) {\n      throw new Error(\"blake2b: wrong personalization length\");\n    }\n    if (config.tree) {\n      if (config.tree.fanout < 0 || config.tree.fanout > exports.MAX_FANOUT) {\n        throw new Error(\"blake2b: wrong tree fanout\");\n      }\n      if (config.tree.maxDepth < 0 || config.tree.maxDepth > exports.MAX_MAX_DEPTH) {\n        throw new Error(\"blake2b: wrong tree depth\");\n      }\n      if (config.tree.leafSize < 0 || config.tree.leafSize > exports.MAX_LEAF_SIZE) {\n        throw new Error(\"blake2b: wrong leaf size\");\n      }\n      if (config.tree.innerDigestLength < 0 || config.tree.innerDigestLength > exports.DIGEST_LENGTH) {\n        throw new Error(\"blake2b: wrong tree inner digest length\");\n      }\n    }\n  };\n  BLAKE2b.prototype.update = function (data, dataLength) {\n    if (dataLength === void 0) {\n      dataLength = data.length;\n    }\n    if (this._finished) {\n      throw new Error(\"blake2b: can't update because hash was finished.\");\n    }\n    var left = exports.BLOCK_SIZE - this._bufferLength;\n    var dataPos = 0;\n    if (dataLength === 0) {\n      return this;\n    }\n    // Finish buffer.\n    if (dataLength > left) {\n      for (var i = 0; i < left; i++) {\n        this._buffer[this._bufferLength + i] = data[dataPos + i];\n      }\n      this._processBlock(exports.BLOCK_SIZE);\n      dataPos += left;\n      dataLength -= left;\n      this._bufferLength = 0;\n    }\n    // Process data blocks.\n    while (dataLength > exports.BLOCK_SIZE) {\n      for (var i = 0; i < exports.BLOCK_SIZE; i++) {\n        this._buffer[i] = data[dataPos + i];\n      }\n      this._processBlock(exports.BLOCK_SIZE);\n      dataPos += exports.BLOCK_SIZE;\n      dataLength -= exports.BLOCK_SIZE;\n      this._bufferLength = 0;\n    }\n    // Copy leftovers to buffer.\n    for (var i = 0; i < dataLength; i++) {\n      this._buffer[this._bufferLength + i] = data[dataPos + i];\n    }\n    this._bufferLength += dataLength;\n    return this;\n  };\n  BLAKE2b.prototype.finish = function (out) {\n    if (!this._finished) {\n      for (var i = this._bufferLength; i < exports.BLOCK_SIZE; i++) {\n        this._buffer[i] = 0;\n      }\n      // Set last block flag.\n      this._flag[0] = 0xffffffff;\n      this._flag[1] = 0xffffffff;\n      // Set last node flag if last node in tree.\n      if (this._lastNode) {\n        this._flag[2] = 0xffffffff;\n        this._flag[3] = 0xffffffff;\n      }\n      this._processBlock(this._bufferLength);\n      this._finished = true;\n    }\n    // Reuse buffer as temporary space for digest.\n    var tmp = this._buffer.subarray(0, 64);\n    for (var i = 0; i < 16; i++) {\n      binary_1.writeUint32LE(this._state[i], tmp, i * 4);\n    }\n    out.set(tmp.subarray(0, out.length));\n    return this;\n  };\n  BLAKE2b.prototype.digest = function () {\n    var out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  };\n  BLAKE2b.prototype.clean = function () {\n    wipe_1.wipe(this._vtmp);\n    wipe_1.wipe(this._mtmp);\n    wipe_1.wipe(this._state);\n    wipe_1.wipe(this._buffer);\n    wipe_1.wipe(this._initialState);\n    if (this._paddedKey) {\n      wipe_1.wipe(this._paddedKey);\n    }\n    this._bufferLength = 0;\n    wipe_1.wipe(this._ctr);\n    wipe_1.wipe(this._flag);\n    this._lastNode = false;\n    this._finished = false;\n  };\n  BLAKE2b.prototype.saveState = function () {\n    if (this._finished) {\n      throw new Error(\"blake2b: cannot save finished state\");\n    }\n    return {\n      state: new Uint32Array(this._state),\n      buffer: new Uint8Array(this._buffer),\n      bufferLength: this._bufferLength,\n      ctr: new Uint32Array(this._ctr),\n      flag: new Uint32Array(this._flag),\n      lastNode: this._lastNode,\n      paddedKey: this._paddedKey ? new Uint8Array(this._paddedKey) : undefined,\n      initialState: new Uint32Array(this._initialState)\n    };\n  };\n  BLAKE2b.prototype.restoreState = function (savedState) {\n    this._state.set(savedState.state);\n    this._buffer.set(savedState.buffer);\n    this._bufferLength = savedState.bufferLength;\n    this._ctr.set(savedState.ctr);\n    this._flag.set(savedState.flag);\n    this._lastNode = savedState.lastNode;\n    if (this._paddedKey) {\n      wipe_1.wipe(this._paddedKey);\n    }\n    this._paddedKey = savedState.paddedKey ? new Uint8Array(savedState.paddedKey) : undefined;\n    this._initialState.set(savedState.initialState);\n    return this;\n  };\n  BLAKE2b.prototype.cleanSavedState = function (savedState) {\n    wipe_1.wipe(savedState.state);\n    wipe_1.wipe(savedState.buffer);\n    wipe_1.wipe(savedState.initialState);\n    if (savedState.paddedKey) {\n      wipe_1.wipe(savedState.paddedKey);\n    }\n    savedState.bufferLength = 0;\n    wipe_1.wipe(savedState.ctr);\n    wipe_1.wipe(savedState.flag);\n    savedState.lastNode = false;\n  };\n  BLAKE2b.prototype._G = function (v, al, bl, cl, dl, ah, bh, ch, dh, ml0, mh0, ml1, mh1) {\n    var vla = v[al],\n      vha = v[ah],\n      vlb = v[bl],\n      vhb = v[bh],\n      vlc = v[cl],\n      vhc = v[ch],\n      vld = v[dl],\n      vhd = v[dh];\n    // 64-bit: va += vb\n    var w = vla & 0xffff,\n      x = vla >>> 16,\n      y = vha & 0xffff,\n      z = vha >>> 16;\n    w += vlb & 0xffff;\n    x += vlb >>> 16;\n    y += vhb & 0xffff;\n    z += vhb >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vha = y & 0xffff | z << 16;\n    vla = w & 0xffff | x << 16;\n    // 64-bit: va += m[sigma[r][2 * i + 0]]\n    w = vla & 0xffff;\n    x = vla >>> 16;\n    y = vha & 0xffff;\n    z = vha >>> 16;\n    w += ml0 & 0xffff;\n    x += ml0 >>> 16;\n    y += mh0 & 0xffff;\n    z += mh0 >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vha = y & 0xffff | z << 16;\n    vla = w & 0xffff | x << 16;\n    // 64-bit: vd ^= va\n    vld ^= vla;\n    vhd ^= vha;\n    // 64-bit: rot(vd, 32)\n    w = vhd;\n    vhd = vld;\n    vld = w;\n    // 64-bit: vc += vd\n    w = vlc & 0xffff;\n    x = vlc >>> 16;\n    y = vhc & 0xffff;\n    z = vhc >>> 16;\n    w += vld & 0xffff;\n    x += vld >>> 16;\n    y += vhd & 0xffff;\n    z += vhd >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vhc = y & 0xffff | z << 16;\n    vlc = w & 0xffff | x << 16;\n    // 64-bit: vb ^= vc\n    vlb ^= vlc;\n    vhb ^= vhc;\n    // 64-bit: rot(vb, 24)\n    w = vlb << 8 | vhb >>> 24;\n    vlb = vhb << 8 | vlb >>> 24;\n    vhb = w;\n    // 64-bit: va += vb\n    w = vla & 0xffff;\n    x = vla >>> 16;\n    y = vha & 0xffff;\n    z = vha >>> 16;\n    w += vlb & 0xffff;\n    x += vlb >>> 16;\n    y += vhb & 0xffff;\n    z += vhb >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vha = y & 0xffff | z << 16;\n    vla = w & 0xffff | x << 16;\n    // 64-bit: va += m[sigma[r][2 * i + 1]\n    w = vla & 0xffff;\n    x = vla >>> 16;\n    y = vha & 0xffff;\n    z = vha >>> 16;\n    w += ml1 & 0xffff;\n    x += ml1 >>> 16;\n    y += mh1 & 0xffff;\n    z += mh1 >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vha = y & 0xffff | z << 16;\n    vla = w & 0xffff | x << 16;\n    // 64-bit: vd ^= va\n    vld ^= vla;\n    vhd ^= vha;\n    // 64-bit: rot(vd, 16)\n    w = vld << 16 | vhd >>> 16;\n    vld = vhd << 16 | vld >>> 16;\n    vhd = w;\n    // 64-bit: vc += vd\n    w = vlc & 0xffff;\n    x = vlc >>> 16;\n    y = vhc & 0xffff;\n    z = vhc >>> 16;\n    w += vld & 0xffff;\n    x += vld >>> 16;\n    y += vhd & 0xffff;\n    z += vhd >>> 16;\n    x += w >>> 16;\n    y += x >>> 16;\n    z += y >>> 16;\n    vhc = y & 0xffff | z << 16;\n    vlc = w & 0xffff | x << 16;\n    // 64-bit: vb ^= vc\n    vlb ^= vlc;\n    vhb ^= vhc;\n    // 64-bit: rot(vb, 63)\n    w = vhb << 1 | vlb >>> 31;\n    vlb = vlb << 1 | vhb >>> 31;\n    vhb = w;\n    v[al] = vla;\n    v[ah] = vha;\n    v[bl] = vlb;\n    v[bh] = vhb;\n    v[cl] = vlc;\n    v[ch] = vhc;\n    v[dl] = vld;\n    v[dh] = vhd;\n  };\n  BLAKE2b.prototype._incrementCounter = function (n) {\n    for (var i = 0; i < 3; i++) {\n      var a = this._ctr[i] + n;\n      this._ctr[i] = a >>> 0;\n      if (this._ctr[i] === a) {\n        return;\n      }\n      n = 1;\n    }\n  };\n  BLAKE2b.prototype._processBlock = function (length) {\n    this._incrementCounter(length);\n    var v = this._vtmp;\n    v.set(this._state);\n    v.set(IV, 16);\n    v[12 * 2 + 0] ^= this._ctr[0];\n    v[12 * 2 + 1] ^= this._ctr[1];\n    v[13 * 2 + 0] ^= this._ctr[2];\n    v[13 * 2 + 1] ^= this._ctr[3];\n    v[14 * 2 + 0] ^= this._flag[0];\n    v[14 * 2 + 1] ^= this._flag[1];\n    v[15 * 2 + 0] ^= this._flag[2];\n    v[15 * 2 + 1] ^= this._flag[3];\n    var m = this._mtmp;\n    for (var i = 0; i < 32; i++) {\n      m[i] = binary_1.readUint32LE(this._buffer, i * 4);\n    }\n    for (var r = 0; r < 12; r++) {\n      this._G(v, 0, 8, 16, 24, 1, 9, 17, 25, m[SIGMA[r][0]], m[SIGMA[r][0] + 1], m[SIGMA[r][1]], m[SIGMA[r][1] + 1]);\n      this._G(v, 2, 10, 18, 26, 3, 11, 19, 27, m[SIGMA[r][2]], m[SIGMA[r][2] + 1], m[SIGMA[r][3]], m[SIGMA[r][3] + 1]);\n      this._G(v, 4, 12, 20, 28, 5, 13, 21, 29, m[SIGMA[r][4]], m[SIGMA[r][4] + 1], m[SIGMA[r][5]], m[SIGMA[r][5] + 1]);\n      this._G(v, 6, 14, 22, 30, 7, 15, 23, 31, m[SIGMA[r][6]], m[SIGMA[r][6] + 1], m[SIGMA[r][7]], m[SIGMA[r][7] + 1]);\n      this._G(v, 0, 10, 20, 30, 1, 11, 21, 31, m[SIGMA[r][8]], m[SIGMA[r][8] + 1], m[SIGMA[r][9]], m[SIGMA[r][9] + 1]);\n      this._G(v, 2, 12, 22, 24, 3, 13, 23, 25, m[SIGMA[r][10]], m[SIGMA[r][10] + 1], m[SIGMA[r][11]], m[SIGMA[r][11] + 1]);\n      this._G(v, 4, 14, 16, 26, 5, 15, 17, 27, m[SIGMA[r][12]], m[SIGMA[r][12] + 1], m[SIGMA[r][13]], m[SIGMA[r][13] + 1]);\n      this._G(v, 6, 8, 18, 28, 7, 9, 19, 29, m[SIGMA[r][14]], m[SIGMA[r][14] + 1], m[SIGMA[r][15]], m[SIGMA[r][15] + 1]);\n    }\n    for (var i = 0; i < 16; i++) {\n      this._state[i] ^= v[i] ^ v[i + 16];\n    }\n  };\n  return BLAKE2b;\n}();\nexports.BLAKE2b = BLAKE2b;\nfunction hash(data, digestLength, config) {\n  if (digestLength === void 0) {\n    digestLength = exports.DIGEST_LENGTH;\n  }\n  var h = new BLAKE2b(digestLength, config);\n  h.update(data);\n  var digest = h.digest();\n  h.clean();\n  return digest;\n}\nexports.hash = hash;","map":{"version":3,"names":["binary_1","require","wipe_1","exports","BLOCK_SIZE","DIGEST_LENGTH","KEY_LENGTH","PERSONALIZATION_LENGTH","SALT_LENGTH","MAX_LEAF_SIZE","Math","pow","MAX_FANOUT","MAX_MAX_DEPTH","IV","Uint32Array","SIGMA","BLAKE2b","digestLength","config","blockSize","_state","Int32Array","_buffer","Uint8Array","_bufferLength","_ctr","_flag","_lastNode","_finished","_vtmp","_mtmp","Error","validateConfig","keyLength","key","length","fanout","maxDepth","tree","leafSize","nodeOffsetLowBits","nodeOffsetHighBits","nodeDepth","innerDigestLength","lastNode","salt","readUint32LE","personalization","_initialState","_paddedKey","set","prototype","reset","wipe","update","data","dataLength","left","dataPos","i","_processBlock","finish","out","tmp","subarray","writeUint32LE","digest","clean","saveState","state","buffer","bufferLength","ctr","flag","paddedKey","undefined","initialState","restoreState","savedState","cleanSavedState","_G","v","al","bl","cl","dl","ah","bh","ch","dh","ml0","mh0","ml1","mh1","vla","vha","vlb","vhb","vlc","vhc","vld","vhd","w","x","y","z","_incrementCounter","n","a","m","r","hash","h"],"sources":["../blake2b.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;;;;AAOA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEaE,OAAA,CAAAC,UAAU,GAAG,GAAG;AAChBD,OAAA,CAAAE,aAAa,GAAG,EAAE;AAClBF,OAAA,CAAAG,UAAU,GAAG,EAAE;AACfH,OAAA,CAAAI,sBAAsB,GAAG,EAAE;AAC3BJ,OAAA,CAAAK,WAAW,GAAG,EAAE;AAEhBL,OAAA,CAAAM,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AACnCR,OAAA,CAAAS,UAAU,GAAG,GAAG;AAChBT,OAAA,CAAAU,aAAa,GAAG,GAAG,CAAC,CAAC;AA0BlC,IAAMC,EAAE,GAAG,IAAIC,WAAW,CAAC;AACvB;AACA,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,CACzB,CAAC;AAEF;AACA;AACA,IAAMC,KAAK,GAAG,CACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAC3D,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAC3D,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAC3D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,E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"},"metadata":{},"sourceType":"script"}