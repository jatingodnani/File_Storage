{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { StorageKey } from '@airgap/beacon-types';\nimport { StorageManager } from './StorageManager';\n/**\n * @internalapi\n *\n * The AppMetadataManager provides CRUD functionality for app-metadata entities and persists them to the provided storage.\n */\nexport class AppMetadataManager {\n  constructor(storage) {\n    this.storageManager = new StorageManager(storage, StorageKey.APP_METADATA_LIST);\n  }\n  getAppMetadataList() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getAll();\n    });\n  }\n  getAppMetadata(senderId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getOne(appMetadata => appMetadata.senderId === senderId);\n    });\n  }\n  addAppMetadata(appMetadata) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.addOne(appMetadata, appMetadataElement => appMetadataElement.senderId === appMetadata.senderId);\n    });\n  }\n  removeAppMetadata(senderId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(appMetadata => appMetadata.senderId === senderId);\n    });\n  }\n  removeAppMetadatas(senderIds) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(appMetadata => senderIds.includes(appMetadata.senderId));\n    });\n  }\n  removeAllAppMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.removeAll();\n    });\n  }\n}","map":{"version":3,"names":["StorageKey","StorageManager","AppMetadataManager","constructor","storage","storageManager","APP_METADATA_LIST","getAppMetadataList","getAll","getAppMetadata","senderId","getOne","appMetadata","addAppMetadata","addOne","appMetadataElement","removeAppMetadata","remove","removeAppMetadatas","senderIds","includes","removeAllAppMetadata","removeAll"],"sources":["../../../src/managers/AppMetadataManager.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAkBA,UAAU,QAAqB,sBAAsB;AACvE,SAASC,cAAc,QAAQ,kBAAkB;AAEjD;;;;;AAKA,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,OAAgB;IAC1B,IAAI,CAACC,cAAc,GAAG,IAAIJ,cAAc,CAACG,OAAO,EAAEJ,UAAU,CAACM,iBAAiB,CAAC;EACjF;EAEaC,kBAAkBA,CAAA;;MAC7B,OAAO,IAAI,CAACF,cAAc,CAACG,MAAM,EAAE;IACrC,CAAC;;EAEYC,cAAcA,CAACC,QAAgB;;MAC1C,OAAO,IAAI,CAACL,cAAc,CAACM,MAAM,CAC9BC,WAAwB,IAAKA,WAAW,CAACF,QAAQ,KAAKA,QAAQ,CAChE;IACH,CAAC;;EAEYG,cAAcA,CAACD,WAAwB;;MAClD,OAAO,IAAI,CAACP,cAAc,CAACS,MAAM,CAC/BF,WAAW,EACVG,kBAA+B,IAAKA,kBAAkB,CAACL,QAAQ,KAAKE,WAAW,CAACF,QAAQ,CAC1F;IACH,CAAC;;EAEYM,iBAAiBA,CAACN,QAAgB;;MAC7C,OAAO,IAAI,CAACL,cAAc,CAACY,MAAM,CAC9BL,WAAwB,IAAKA,WAAW,CAACF,QAAQ,KAAKA,QAAQ,CAChE;IACH,CAAC;;EAEYQ,kBAAkBA,CAACC,SAAmB;;MACjD,OAAO,IAAI,CAACd,cAAc,CAACY,MAAM,CAAEL,WAAwB,IACzDO,SAAS,CAACC,QAAQ,CAACR,WAAW,CAACF,QAAQ,CAAC,CACzC;IACH,CAAC;;EAEYW,oBAAoBA,CAAA;;MAC/B,OAAO,IAAI,CAAChB,cAAc,CAACiB,SAAS,EAAE;IACxC,CAAC"},"metadata":{},"sourceType":"module"}