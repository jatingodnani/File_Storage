{"ast":null,"code":"/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/**\r\n * Convert a typed array to a Buffer without a copy\r\n *\r\n * Author:   Feross Aboukhadijeh <https://feross.org>\r\n * License:  MIT\r\n *\r\n * `npm install typedarray-to-buffer`\r\n */\n\nmodule.exports = function typedarrayToBuffer(arr) {\n  return ArrayBuffer.isView(arr)\n  // To avoid a copy, use the typed array's underlying ArrayBuffer to back\n  // new Buffer, respecting the \"view\", i.e. byteOffset and byteLength\n  ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)\n  // Pass through all other types to `Buffer.from`\n  : Buffer.from(arr);\n};","map":{"version":3,"names":["module","exports","typedarrayToBuffer","arr","ArrayBuffer","isView","Buffer","from","buffer","byteOffset","byteLength"],"sources":["C:/contract/File_Storage/node_modules/typedarray-to-buffer/index.js"],"sourcesContent":["/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\n/**\r\n * Convert a typed array to a Buffer without a copy\r\n *\r\n * Author:   Feross Aboukhadijeh <https://feross.org>\r\n * License:  MIT\r\n *\r\n * `npm install typedarray-to-buffer`\r\n */\r\n\r\nmodule.exports = function typedarrayToBuffer (arr) {\r\n  return ArrayBuffer.isView(arr)\r\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back\r\n    // new Buffer, respecting the \"view\", i.e. byteOffset and byteLength\r\n    ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)\r\n    // Pass through all other types to `Buffer.from`\r\n    : Buffer.from(arr)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAAEC,GAAG,EAAE;EACjD,OAAOC,WAAW,CAACC,MAAM,CAACF,GAAG;EAC3B;EACA;EAAA,EACEG,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACK,MAAM,EAAEL,GAAG,CAACM,UAAU,EAAEN,GAAG,CAACO,UAAU;EACxD;EAAA,EACEJ,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC;AACtB,CAAC"},"metadata":{},"sourceType":"script"}