{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport axios from 'axios';\nimport * as bs58check from 'bs58check';\nimport { BeaconEvent } from '../events';\nimport { TransportType, StorageKey, BeaconMessageType, PermissionScope, NetworkType, Origin, BeaconErrorType, SigningType, ColorMode } from '@airgap/beacon-types';\nimport { Client, BeaconError, AppMetadataManager, Serializer, LocalStorage, getAccountIdentifier, getSenderId, Logger } from '@airgap/beacon-core';\nimport { getAddressFromPublicKey, ExposedPromise, generateGUID, toHex } from '@airgap/beacon-utils';\nimport { messageEvents } from '../beacon-message-events';\nimport { TzktBlockExplorer } from '../utils/tzkt-blockexplorer';\nimport { closeToast } from '@airgap/beacon-ui';\nimport { BeaconEventHandler } from '@airgap/beacon-dapp';\nimport { DappPostMessageTransport } from '../transports/DappPostMessageTransport';\nimport { DappP2PTransport } from '../transports/DappP2PTransport';\nimport { PostMessageTransport } from '@airgap/beacon-transport-postmessage';\nimport { getColorMode, setColorMode, setDesktopList, setExtensionList, setWebList, setiOSList, getDesktopList, getExtensionList, getWebList, getiOSList } from '@airgap/beacon-ui';\nimport { signMessage } from '@airgap/beacon-utils';\nconst logger = new Logger('DAppClient');\n/**\n * @publicapi\n *\n * The DAppClient has to be used in decentralized applications. It handles all the logic related to connecting to beacon-compatible\n * wallets and sending requests.\n *\n * @category DApp\n */\nexport class DAppClient extends Client {\n  constructor(config) {\n    var _a, _b, _c, _d, _e;\n    super(Object.assign({\n      storage: config && config.storage ? config.storage : new LocalStorage()\n    }, config));\n    this.events = new BeaconEventHandler();\n    /**\n     * A map of requests that are currently \"open\", meaning we have sent them to a wallet and are still awaiting a response.\n     */\n    this.openRequests = new Map();\n    /**\n     * The currently active account. For all requests that are associated to a specific request (operation request, signing request),\n     * the active account is used to determine the network and destination wallet\n     */\n    this._activeAccount = new ExposedPromise();\n    /**\n     * The currently active peer. This is used to address a peer in case the active account is not set. (Eg. for permission requests)\n     */\n    this._activePeer = new ExposedPromise();\n    this.blockchains = new Map();\n    this.events = new BeaconEventHandler(config.eventHandlers, (_a = config.disableDefaultEvents) !== null && _a !== void 0 ? _a : false);\n    this.blockExplorer = (_b = config.blockExplorer) !== null && _b !== void 0 ? _b : new TzktBlockExplorer();\n    this.preferredNetwork = (_c = config.preferredNetwork) !== null && _c !== void 0 ? _c : NetworkType.MAINNET;\n    setColorMode((_d = config.colorMode) !== null && _d !== void 0 ? _d : ColorMode.LIGHT);\n    this.disclaimerText = config.disclaimerText;\n    this.errorMessages = (_e = config.errorMessages) !== null && _e !== void 0 ? _e : {};\n    this.appMetadataManager = new AppMetadataManager(this.storage);\n    this.activeAccountLoaded = this.storage.get(StorageKey.ACTIVE_ACCOUNT).then(activeAccountIdentifier => __awaiter(this, void 0, void 0, function* () {\n      if (activeAccountIdentifier) {\n        yield this.setActiveAccount(yield this.accountManager.getAccount(activeAccountIdentifier));\n      } else {\n        yield this.setActiveAccount(undefined);\n      }\n    })).catch(storageError => __awaiter(this, void 0, void 0, function* () {\n      yield this.setActiveAccount(undefined);\n      console.error(storageError);\n    }));\n    this.handleResponse = (message, connectionInfo) => __awaiter(this, void 0, void 0, function* () {\n      var _f, _g;\n      const openRequest = this.openRequests.get(message.id);\n      logger.log('handleResponse', 'Received message', message, connectionInfo);\n      if (message.version === '3') {\n        const typedMessage = message;\n        if (openRequest && typedMessage.message.type === BeaconMessageType.Acknowledge) {\n          logger.log(`acknowledge message received for ${message.id}`);\n          console.timeLog(message.id, 'acknowledge');\n          this.events.emit(BeaconEvent.ACKNOWLEDGE_RECEIVED, {\n            message: typedMessage.message,\n            extraInfo: {},\n            walletInfo: yield this.getWalletInfo()\n          }).catch(console.error);\n        } else if (openRequest) {\n          const appMetadata = typedMessage.message /* Why is this unkown cast needed? */.blockchainData.appMetadata;\n          if (typedMessage.message.type === BeaconMessageType.PermissionResponse && appMetadata) {\n            yield this.appMetadataManager.addAppMetadata(appMetadata);\n          }\n          console.timeLog(typedMessage.id, 'response');\n          console.timeEnd(typedMessage.id);\n          if (typedMessage.message.type === BeaconMessageType.Error) {\n            openRequest.reject(typedMessage.message);\n          } else {\n            openRequest.resolve({\n              message,\n              connectionInfo\n            });\n          }\n          this.openRequests.delete(typedMessage.id);\n        } else {\n          if (typedMessage.message.type === BeaconMessageType.Disconnect) {\n            const relevantTransport = connectionInfo.origin === Origin.P2P ? this.p2pTransport : (_f = this.postMessageTransport) !== null && _f !== void 0 ? _f : yield this.transport;\n            if (relevantTransport) {\n              // TODO: Handle removing it from the right transport (if it was received from the non-active transport)\n              const peers = yield relevantTransport.getPeers();\n              const peer = peers.find(peerEl => peerEl.senderId === message.senderId);\n              if (peer) {\n                yield relevantTransport.removePeer(peer);\n                yield this.removeAccountsForPeers([peer]);\n                yield this.events.emit(BeaconEvent.CHANNEL_CLOSED);\n              } else {\n                logger.error('handleDisconnect', 'cannot find peer for sender ID', message.senderId);\n              }\n            }\n          } else {\n            logger.error('handleResponse', 'no request found for id ', message.id, message);\n          }\n        }\n      } else {\n        const typedMessage = message;\n        if (openRequest && typedMessage.type === BeaconMessageType.Acknowledge) {\n          logger.log(`acknowledge message received for ${message.id}`);\n          console.timeLog(message.id, 'acknowledge');\n          this.events.emit(BeaconEvent.ACKNOWLEDGE_RECEIVED, {\n            message: typedMessage,\n            extraInfo: {},\n            walletInfo: yield this.getWalletInfo()\n          }).catch(console.error);\n        } else if (openRequest) {\n          if (typedMessage.type === BeaconMessageType.PermissionResponse && typedMessage.appMetadata) {\n            yield this.appMetadataManager.addAppMetadata(typedMessage.appMetadata);\n          }\n          console.timeLog(typedMessage.id, 'response');\n          console.timeEnd(typedMessage.id);\n          if (typedMessage.type === BeaconMessageType.Error || message.errorType) {\n            // TODO: Remove \"any\" once we remove support for v1 wallets\n            openRequest.reject(typedMessage);\n          } else {\n            openRequest.resolve({\n              message,\n              connectionInfo\n            });\n          }\n          this.openRequests.delete(typedMessage.id);\n        } else {\n          if (typedMessage.type === BeaconMessageType.Disconnect || message.typedMessage.type === BeaconMessageType.Disconnect // TODO: TYPE\n          ) {\n            const relevantTransport = connectionInfo.origin === Origin.P2P ? this.p2pTransport : (_g = this.postMessageTransport) !== null && _g !== void 0 ? _g : yield this.transport;\n            if (relevantTransport) {\n              // TODO: Handle removing it from the right transport (if it was received from the non-active transport)\n              const peers = yield relevantTransport.getPeers();\n              const peer = peers.find(peerEl => peerEl.senderId === message.senderId);\n              if (peer) {\n                yield relevantTransport.removePeer(peer);\n                yield this.removeAccountsForPeers([peer]);\n                yield this.events.emit(BeaconEvent.CHANNEL_CLOSED);\n              } else {\n                logger.error('handleDisconnect', 'cannot find peer for sender ID', message.senderId);\n              }\n            }\n          } else {\n            logger.error('handleResponse', 'no request found for id ', message.id, message);\n          }\n        }\n      }\n    });\n  }\n  initInternalTransports() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const keyPair = yield this.keyPair;\n      if (this.postMessageTransport || this.p2pTransport) {\n        return;\n      }\n      this.postMessageTransport = new DappPostMessageTransport(this.name, keyPair, this.storage);\n      yield this.addListener(this.postMessageTransport);\n      this.p2pTransport = new DappP2PTransport(this.name, keyPair, this.storage, this.matrixNodes, this.iconUrl, this.appUrl);\n      yield this.addListener(this.p2pTransport);\n    });\n  }\n  init(transport) {\n    const _super = Object.create(null, {\n      init: {\n        get: () => super.init\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._initPromise) {\n        return this._initPromise;\n      }\n      try {\n        yield this.activeAccountLoaded;\n      } catch (_a) {\n        //\n      }\n      this._initPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        if (transport) {\n          yield this.addListener(transport);\n          resolve(yield _super.init.call(this, transport));\n        } else if (this._transport.isSettled()) {\n          yield (yield this.transport).connect();\n          resolve(yield _super.init.call(this, yield this.transport));\n        } else {\n          const activeAccount = yield this.getActiveAccount();\n          const stopListening = () => {\n            if (this.postMessageTransport) {\n              this.postMessageTransport.stopListeningForNewPeers().catch(console.error);\n            }\n            if (this.p2pTransport) {\n              this.p2pTransport.stopListeningForNewPeers().catch(console.error);\n            }\n          };\n          yield this.initInternalTransports();\n          if (!this.postMessageTransport || !this.p2pTransport) {\n            return;\n          }\n          this.postMessageTransport.connect().then().catch(console.error);\n          if (activeAccount && activeAccount.origin) {\n            const origin = activeAccount.origin.type;\n            // Select the transport that matches the active account\n            if (origin === Origin.EXTENSION) {\n              resolve(yield _super.init.call(this, this.postMessageTransport));\n            } else if (origin === Origin.P2P) {\n              resolve(yield _super.init.call(this, this.p2pTransport));\n            }\n          } else {\n            const p2pTransport = this.p2pTransport;\n            const postMessageTransport = this.postMessageTransport;\n            postMessageTransport.listenForNewPeer(peer => {\n              logger.log('init', 'postmessage transport peer connected', peer);\n              this.events.emit(BeaconEvent.PAIR_SUCCESS, peer).catch(emitError => console.warn(emitError));\n              this.setActivePeer(peer).catch(console.error);\n              this.setTransport(this.postMessageTransport).catch(console.error);\n              stopListening();\n              resolve(TransportType.POST_MESSAGE);\n            }).catch(console.error);\n            p2pTransport.listenForNewPeer(peer => {\n              logger.log('init', 'p2p transport peer connected', peer);\n              this.events.emit(BeaconEvent.PAIR_SUCCESS, peer).catch(emitError => console.warn(emitError));\n              this.setActivePeer(peer).catch(console.error);\n              this.setTransport(this.p2pTransport).catch(console.error);\n              stopListening();\n              resolve(TransportType.P2P);\n            }).catch(console.error);\n            PostMessageTransport.getAvailableExtensions().then(() => __awaiter(this, void 0, void 0, function* () {\n              this.events.emit(BeaconEvent.PAIR_INIT, {\n                p2pPeerInfo: () => {\n                  p2pTransport.connect().then().catch(console.error);\n                  return p2pTransport.getPairingRequestInfo();\n                },\n                postmessagePeerInfo: () => postMessageTransport.getPairingRequestInfo(),\n                preferredNetwork: this.preferredNetwork,\n                abortedHandler: () => {\n                  console.log('ABORTED');\n                  this._initPromise = undefined;\n                },\n                disclaimerText: this.disclaimerText\n              }).catch(emitError => console.warn(emitError));\n            })).catch(error => {\n              this._initPromise = undefined;\n              console.error(error);\n            });\n          }\n        }\n      }));\n      return this._initPromise;\n    });\n  }\n  /**\n   * Returns the active account\n   */\n  getActiveAccount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._activeAccount.promise;\n    });\n  }\n  /**\n   * Sets the active account\n   *\n   * @param account The account that will be set as the active account\n   */\n  setActiveAccount(account) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._activeAccount.isSettled()) {\n        // If the promise has already been resolved we need to create a new one.\n        this._activeAccount = ExposedPromise.resolve(account);\n      } else {\n        this._activeAccount.resolve(account);\n      }\n      if (account) {\n        const origin = account.origin.type;\n        yield this.initInternalTransports();\n        // Select the transport that matches the active account\n        if (origin === Origin.EXTENSION) {\n          yield this.setTransport(this.postMessageTransport);\n        } else if (origin === Origin.P2P) {\n          yield this.setTransport(this.p2pTransport);\n        }\n        const peer = yield this.getPeer(account);\n        yield this.setActivePeer(peer);\n      } else {\n        yield this.setActivePeer(undefined);\n        yield this.setTransport(undefined);\n      }\n      yield this.storage.set(StorageKey.ACTIVE_ACCOUNT, account ? account.accountIdentifier : undefined);\n      yield this.events.emit(BeaconEvent.ACTIVE_ACCOUNT_SET, account);\n      return;\n    });\n  }\n  /**\n   * Clear the active account\n   */\n  clearActiveAccount() {\n    return this.setActiveAccount();\n  }\n  setColorMode(colorMode) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return setColorMode(colorMode);\n    });\n  }\n  getColorMode() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return getColorMode();\n    });\n  }\n  /**\n   * @deprecated\n   *\n   * Use getOwnAppMetadata instead\n   */\n  getAppMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getOwnAppMetadata();\n    });\n  }\n  showPrepare() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const walletInfo = yield (() => __awaiter(this, void 0, void 0, function* () {\n        try {\n          return yield this.getWalletInfo();\n        } catch (_a) {\n          return undefined;\n        }\n      }))();\n      yield this.events.emit(BeaconEvent.SHOW_PREPARE, {\n        walletInfo\n      });\n    });\n  }\n  hideUI(elements) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.emit(BeaconEvent.HIDE_UI, elements);\n    });\n  }\n  /**\n   * Will remove the account from the local storage and set a new active account if necessary.\n   *\n   * @param accountIdentifier ID of the account\n   */\n  removeAccount(accountIdentifier) {\n    const _super = Object.create(null, {\n      removeAccount: {\n        get: () => super.removeAccount\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const removeAccountResult = _super.removeAccount.call(this, accountIdentifier);\n      const activeAccount = yield this.getActiveAccount();\n      if (activeAccount && activeAccount.accountIdentifier === accountIdentifier) {\n        yield this.setActiveAccount(undefined);\n      }\n      return removeAccountResult;\n    });\n  }\n  /**\n   * Remove all accounts and set active account to undefined\n   */\n  removeAllAccounts() {\n    const _super = Object.create(null, {\n      removeAllAccounts: {\n        get: () => super.removeAllAccounts\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      yield _super.removeAllAccounts.call(this);\n      yield this.setActiveAccount(undefined);\n    });\n  }\n  /**\n   * Removes a peer and all the accounts that have been connected through that peer\n   *\n   * @param peer Peer to be removed\n   */\n  removePeer(peer) {\n    let sendDisconnectToPeer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const transport = yield this.transport;\n      const removePeerResult = transport.removePeer(peer);\n      yield this.removeAccountsForPeers([peer]);\n      if (sendDisconnectToPeer) {\n        yield this.sendDisconnectToPeer(peer, transport);\n      }\n      return removePeerResult;\n    });\n  }\n  /**\n   * Remove all peers and all accounts that have been connected through those peers\n   */\n  removeAllPeers() {\n    let sendDisconnectToPeers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      const transport = yield this.transport;\n      const peers = yield transport.getPeers();\n      const removePeerResult = transport.removeAllPeers();\n      yield this.removeAccountsForPeers(peers);\n      if (sendDisconnectToPeers) {\n        const disconnectPromises = peers.map(peer => this.sendDisconnectToPeer(peer, transport));\n        yield Promise.all(disconnectPromises);\n      }\n      return removePeerResult;\n    });\n  }\n  /**\n   * Allows the user to subscribe to specific events that are fired in the SDK\n   *\n   * @param internalEvent The event to subscribe to\n   * @param eventCallback The callback that will be called when the event occurs\n   */\n  subscribeToEvent(internalEvent, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.on(internalEvent, eventCallback);\n    });\n  }\n  /**\n   * Check if we have permissions to send the specific message type to the active account.\n   * If no active account is set, only permission requests are allowed.\n   *\n   * @param type The type of the message\n   */\n  checkPermissions(type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (type === BeaconMessageType.PermissionRequest) {\n        return true;\n      }\n      const activeAccount = yield this.getActiveAccount();\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account set!');\n      }\n      const permissions = activeAccount.scopes;\n      switch (type) {\n        case BeaconMessageType.OperationRequest:\n          return permissions.includes(PermissionScope.OPERATION_REQUEST);\n        case BeaconMessageType.SignPayloadRequest:\n          return permissions.includes(PermissionScope.SIGN);\n        // TODO: ENCRYPTION\n        // case BeaconMessageType.EncryptPayloadRequest:\n        //   return permissions.includes(PermissionScope.ENCRYPT)\n        case BeaconMessageType.BroadcastRequest:\n          return true;\n        default:\n          return false;\n      }\n    });\n  }\n  sendNotification(title, message, payload, protocolIdentifier) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function* () {\n      const activeAccount = yield this.getActiveAccount();\n      if (!activeAccount || activeAccount && !activeAccount.scopes.includes(PermissionScope.NOTIFICATION) && !activeAccount.notification) {\n        throw new Error('notification permissions not given');\n      }\n      if (!((_a = activeAccount.notification) === null || _a === void 0 ? void 0 : _a.token)) {\n        throw new Error('No AccessToken');\n      }\n      const url = (_b = activeAccount.notification) === null || _b === void 0 ? void 0 : _b.apiUrl;\n      if (!url) {\n        throw new Error('No Push URL set');\n      }\n      return this.sendNotificationWithAccessToken({\n        url,\n        recipient: activeAccount.address,\n        title,\n        body: message,\n        payload,\n        protocolIdentifier,\n        accessToken: (_c = activeAccount.notification) === null || _c === void 0 ? void 0 : _c.token\n      });\n    });\n  }\n  addBlockchain(chain) {\n    this.blockchains.set(chain.identifier, chain);\n    chain.getWalletLists().then(walletLists => {\n      setDesktopList(walletLists.desktopList);\n      setExtensionList(walletLists.extensionList);\n      setWebList(walletLists.webList);\n      setiOSList(walletLists.iOSList);\n    });\n  }\n  removeBlockchain(chainIdentifier) {\n    this.blockchains.delete(chainIdentifier);\n  }\n  /** Generic messages */\n  permissionRequest(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log('PERMISSION REQUEST');\n      const blockchain = this.blockchains.get(input.blockchainIdentifier);\n      if (!blockchain) {\n        throw new Error(`Blockchain \"${input.blockchainIdentifier}\" not supported by dAppClient`);\n      }\n      const request = Object.assign(Object.assign({}, input), {\n        type: BeaconMessageType.PermissionRequest,\n        blockchainData: Object.assign(Object.assign({}, input.blockchainData), {\n          appMetadata: yield this.getOwnAppMetadata()\n        })\n      });\n      console.log('REQUESTION PERMIMISSION V3', 'xxx', request);\n      const {\n        message: response,\n        connectionInfo\n      } = yield this.makeRequestV3(request).catch(_requestError => __awaiter(this, void 0, void 0, function* () {\n        throw new Error('TODO');\n        // throw await this.handleRequestError(request, requestError)\n      }));\n\n      console.log('RESPONSE V3', response, connectionInfo);\n      const partialAccountInfos = yield blockchain.getAccountInfosFromPermissionResponse(response.message);\n      // const accountInfo: AccountInfo = {\n      const accountInfo = {\n        accountIdentifier: partialAccountInfos[0].accountId,\n        senderId: response.senderId,\n        origin: {\n          type: connectionInfo.origin,\n          id: connectionInfo.id\n        },\n        address: partialAccountInfos[0].address,\n        publicKey: partialAccountInfos[0].publicKey,\n        scopes: response.message.blockchainData.scopes,\n        connectedAt: new Date().getTime(),\n        chainData: response.message.blockchainData\n      };\n      yield this.accountManager.addAccount(accountInfo);\n      yield this.setActiveAccount(accountInfo);\n      yield blockchain.handleResponse({\n        request,\n        account: accountInfo,\n        output: response,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      yield this.notifySuccess(request, {\n        account: accountInfo,\n        output: {\n          address: partialAccountInfos[0].address,\n          network: {\n            type: NetworkType.MAINNET\n          },\n          scopes: [PermissionScope.OPERATION_REQUEST]\n        },\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      // return output\n      return response.message;\n    });\n  }\n  request(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log('REQUEST', input);\n      const blockchain = this.blockchains.get(input.blockchainIdentifier);\n      if (!blockchain) {\n        throw new Error(`Blockchain \"${blockchain}\" not supported by dAppClient`);\n      }\n      yield blockchain.validateRequest(input);\n      const activeAccount = yield this.getActiveAccount();\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n      const request = Object.assign(Object.assign({}, input), {\n        type: BeaconMessageType.BlockchainRequest,\n        accountId: activeAccount.accountIdentifier\n      });\n      const {\n        message: response,\n        connectionInfo\n      } = yield this.makeRequestV3(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        console.error(requestError);\n        throw new Error('TODO');\n        // throw await this.handleRequestError(request, requestError)\n      }));\n\n      yield blockchain.handleResponse({\n        request,\n        account: activeAccount,\n        output: response,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return response.message;\n    });\n  }\n  /**\n   * Send a permission request to the DApp. This should be done as the first step. The wallet will respond\n   * with an publicKey and permissions that were given. The account returned will be set as the \"activeAccount\"\n   * and will be used for the following requests.\n   *\n   * @param input The message details we need to prepare the PermissionRequest message.\n   */\n  requestPermissions(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = {\n        appMetadata: yield this.getOwnAppMetadata(),\n        type: BeaconMessageType.PermissionRequest,\n        network: input && input.network ? input.network : {\n          type: NetworkType.MAINNET\n        },\n        scopes: input && input.scopes ? input.scopes : [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN]\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      // TODO: Migration code. Remove sometime after 1.0.0 release.\n      const publicKey = message.publicKey || message.pubkey || message.pubKey;\n      const address = yield getAddressFromPublicKey(publicKey);\n      const accountInfo = {\n        accountIdentifier: yield getAccountIdentifier(address, message.network),\n        senderId: message.senderId,\n        origin: {\n          type: connectionInfo.origin,\n          id: connectionInfo.id\n        },\n        address,\n        publicKey,\n        network: message.network,\n        scopes: message.scopes,\n        threshold: message.threshold,\n        notification: message.notification,\n        connectedAt: new Date().getTime()\n      };\n      yield this.accountManager.addAccount(accountInfo);\n      yield this.setActiveAccount(accountInfo);\n      const output = Object.assign(Object.assign({}, message), {\n        address,\n        accountInfo\n      });\n      yield this.notifySuccess(request, {\n        account: accountInfo,\n        output,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return output;\n    });\n  }\n  /**\n   * This method will send a \"SignPayloadRequest\" to the wallet. This method is meant to be used to sign\n   * arbitrary data (eg. a string). It will return the signature in the format of \"edsig...\"\n   *\n   * @param input The message details we need to prepare the SignPayloadRequest message.\n   */\n  requestSignPayload(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.payload) {\n        throw yield this.sendInternalError('Payload must be provided');\n      }\n      const activeAccount = yield this.getActiveAccount();\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n      const payload = input.payload;\n      if (typeof payload !== 'string') {\n        throw new Error('Payload must be a string');\n      }\n      const signingType = (() => {\n        switch (input.signingType) {\n          case SigningType.OPERATION:\n            if (!payload.startsWith('03')) {\n              throw new Error('When using signing type \"OPERATION\", the payload must start with prefix \"03\"');\n            }\n            return SigningType.OPERATION;\n          case SigningType.MICHELINE:\n            if (!payload.startsWith('05')) {\n              throw new Error('When using signing type \"MICHELINE\", the payload must start with prefix \"05\"');\n            }\n            return SigningType.MICHELINE;\n          case SigningType.RAW:\n          default:\n            return SigningType.RAW;\n        }\n      })();\n      const request = {\n        type: BeaconMessageType.SignPayloadRequest,\n        signingType,\n        payload,\n        sourceAddress: input.sourceAddress || activeAccount.address\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        account: activeAccount,\n        output: message,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n  /**\n   * This method will send an \"EncryptPayloadRequest\" to the wallet. This method is meant to be used to encrypt or decrypt\n   * arbitrary data (eg. a string). It will return the encrypted or decrypted payload\n   *\n   * @param input The message details we need to prepare the EncryptPayloadRequest message.\n   */\n  // TODO: ENCRYPTION\n  // public async requestEncryptPayload(\n  //   input: RequestEncryptPayloadInput\n  // ): Promise<EncryptPayloadResponseOutput> {\n  //   if (!input.payload) {\n  //     throw await this.sendInternalError('Payload must be provided')\n  //   }\n  //   const activeAccount: AccountInfo | undefined = await this.getActiveAccount()\n  //   if (!activeAccount) {\n  //     throw await this.sendInternalError('No active account!')\n  //   }\n  //   const payload = input.payload\n  //   if (typeof payload !== 'string') {\n  //     throw new Error('Payload must be a string')\n  //   }\n  //   if (typeof input.encryptionCryptoOperation === 'undefined') {\n  //     throw new Error('encryptionCryptoOperation must be defined')\n  //   }\n  //   if (typeof input.encryptionType === 'undefined') {\n  //     throw new Error('encryptionType must be defined')\n  //   }\n  //   const request: EncryptPayloadRequestInput = {\n  //     type: BeaconMessageType.EncryptPayloadRequest,\n  //     cryptoOperation: input.encryptionCryptoOperation,\n  //     encryptionType: input.encryptionType,\n  //     payload,\n  //     sourceAddress: input.sourceAddress || activeAccount.address\n  //   }\n  //   const { message, connectionInfo } = await this.makeRequest<\n  //     EncryptPayloadRequest,\n  //     EncryptPayloadResponse\n  //   >(request).catch(async (requestError: ErrorResponse) => {\n  //     throw await this.handleRequestError(request, requestError)\n  //   })\n  //   await this.notifySuccess(request, {\n  //     account: activeAccount,\n  //     output: message,\n  //     connectionContext: connectionInfo,\n  //     walletInfo: await this.getWalletInfo()\n  //   })\n  //   return message\n  // }\n  /**\n   * This method sends an OperationRequest to the wallet. This method should be used for all kinds of operations,\n   * eg. transaction or delegation. Not all properties have to be provided. Data like \"counter\" and fees will be\n   * fetched and calculated by the wallet (but they can still be provided if required).\n   *\n   * @param input The message details we need to prepare the OperationRequest message.\n   */\n  requestOperation(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.operationDetails) {\n        throw yield this.sendInternalError('Operation details must be provided');\n      }\n      const activeAccount = yield this.getActiveAccount();\n      if (!activeAccount) {\n        throw yield this.sendInternalError('No active account!');\n      }\n      const request = {\n        type: BeaconMessageType.OperationRequest,\n        network: activeAccount.network || {\n          type: NetworkType.MAINNET\n        },\n        operationDetails: input.operationDetails,\n        sourceAddress: activeAccount.address || ''\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        account: activeAccount,\n        output: message,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n  /**\n   * Sends a \"BroadcastRequest\" to the wallet. This method can be used to inject an already signed transaction\n   * to the network.\n   *\n   * @param input The message details we need to prepare the BroadcastRequest message.\n   */\n  requestBroadcast(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!input.signedTransaction) {\n        throw yield this.sendInternalError('Signed transaction must be provided');\n      }\n      const network = input.network || {\n        type: NetworkType.MAINNET\n      };\n      const request = {\n        type: BeaconMessageType.BroadcastRequest,\n        network,\n        signedTransaction: input.signedTransaction\n      };\n      const {\n        message,\n        connectionInfo\n      } = yield this.makeRequest(request).catch(requestError => __awaiter(this, void 0, void 0, function* () {\n        throw yield this.handleRequestError(request, requestError);\n      }));\n      yield this.notifySuccess(request, {\n        network,\n        output: message,\n        blockExplorer: this.blockExplorer,\n        connectionContext: connectionInfo,\n        walletInfo: yield this.getWalletInfo()\n      });\n      return message;\n    });\n  }\n  setActivePeer(peer) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._activePeer.isSettled()) {\n        // If the promise has already been resolved we need to create a new one.\n        this._activePeer = ExposedPromise.resolve(peer);\n      } else {\n        this._activePeer.resolve(peer);\n      }\n      if (peer) {\n        yield this.initInternalTransports();\n        if (peer.type === 'postmessage-pairing-response') {\n          yield this.setTransport(this.postMessageTransport);\n        } else if (peer.type === 'p2p-pairing-response') {\n          yield this.setTransport(this.p2pTransport);\n        }\n      }\n      return;\n    });\n  }\n  /**\n   * A \"setter\" for when the transport needs to be changed.\n   */\n  setTransport(transport) {\n    const _super = Object.create(null, {\n      setTransport: {\n        get: () => super.setTransport\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!transport) {\n        this._initPromise = undefined;\n      }\n      const result = _super.setTransport.call(this, transport);\n      yield this.events.emit(BeaconEvent.ACTIVE_TRANSPORT_SET, transport);\n      return result;\n    });\n  }\n  /**\n   * This method will emit an internal error message.\n   *\n   * @param errorMessage The error message to send.\n   */\n  sendInternalError(errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n        text: errorMessage\n      });\n      throw new Error(errorMessage);\n    });\n  }\n  /**\n   * This method will remove all accounts associated with a specific peer.\n   *\n   * @param peersToRemove An array of peers for which accounts should be removed\n   */\n  removeAccountsForPeers(peersToRemove) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const accounts = yield this.accountManager.getAccounts();\n      const peerIdsToRemove = peersToRemove.map(peer => peer.senderId);\n      // Remove all accounts with origin of the specified peer\n      const accountsToRemove = accounts.filter(account => peerIdsToRemove.includes(account.senderId));\n      const accountIdentifiersToRemove = accountsToRemove.map(accountInfo => accountInfo.accountIdentifier);\n      yield this.accountManager.removeAccounts(accountIdentifiersToRemove);\n      // Check if one of the accounts that was removed was the active account and if yes, set it to undefined\n      const activeAccount = yield this.getActiveAccount();\n      if (activeAccount) {\n        if (accountIdentifiersToRemove.includes(activeAccount.accountIdentifier)) {\n          yield this.setActiveAccount(undefined);\n        }\n      }\n    });\n  }\n  /**\n   * This message handles errors that we receive from the wallet.\n   *\n   * @param request The request we sent\n   * @param beaconError The error we received\n   */\n  handleRequestError(request, beaconError) {\n    return __awaiter(this, void 0, void 0, function* () {\n      logger.error('handleRequestError', 'error response', beaconError);\n      if (beaconError.errorType) {\n        const buttons = [];\n        if (beaconError.errorType === BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR) {\n          const actionCallback = () => __awaiter(this, void 0, void 0, function* () {\n            const operationRequest = request;\n            // if the account we requested is not available, we remove it locally\n            let accountInfo;\n            if (operationRequest.sourceAddress && operationRequest.network) {\n              const accountIdentifier = yield getAccountIdentifier(operationRequest.sourceAddress, operationRequest.network);\n              accountInfo = yield this.getAccount(accountIdentifier);\n              if (accountInfo) {\n                yield this.removeAccount(accountInfo.accountIdentifier);\n              }\n            }\n          });\n          buttons.push({\n            text: 'Remove account',\n            actionCallback\n          });\n        }\n        const peer = yield this.getPeer();\n        const activeAccount = yield this.getActiveAccount();\n        // If we sent a permission request, received an error and there is no active account, we need to reset the DAppClient.\n        // This most likely means that the user rejected the first permission request after pairing a wallet, so we \"forget\" the paired wallet to allow the user to pair again.\n        if (request.type === BeaconMessageType.PermissionRequest && (yield this.getActiveAccount()) === undefined) {\n          this._initPromise = undefined;\n          this.postMessageTransport = undefined;\n          this.p2pTransport = undefined;\n          yield this.setTransport();\n          yield this.setActivePeer();\n        }\n        this.events.emit(messageEvents[request.type].error, {\n          errorResponse: beaconError,\n          walletInfo: yield this.getWalletInfo(peer, activeAccount),\n          errorMessages: this.errorMessages\n        }, buttons).catch(emitError => logger.error('handleRequestError', emitError));\n        throw BeaconError.getError(beaconError.errorType, beaconError.errorData);\n      }\n      throw beaconError;\n    });\n  }\n  /**\n   * This message will send an event when we receive a successful response to one of the requests we sent.\n   *\n   * @param request The request we sent\n   * @param response The response we received\n   */\n  notifySuccess(request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.events.emit(messageEvents[request.type].success, response).catch(emitError => console.warn(emitError));\n    });\n  }\n  getWalletInfo(peer, account) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      const selectedAccount = account ? account : yield this.getActiveAccount();\n      const selectedPeer = peer ? peer : yield this.getPeer(selectedAccount);\n      let walletInfo;\n      if (selectedAccount) {\n        walletInfo = yield this.appMetadataManager.getAppMetadata(selectedAccount.senderId);\n      }\n      const typedPeer = selectedPeer;\n      if (!walletInfo) {\n        walletInfo = {\n          name: typedPeer.name,\n          icon: typedPeer.icon\n        };\n      }\n      const lowerCaseCompare = (str1, str2) => {\n        if (str1 && str2) {\n          return str1.toLowerCase() === str2.toLowerCase();\n        }\n        return false;\n      };\n      let selectedApp;\n      let type;\n      // TODO: Remove once all wallets send the icon?\n      if (getiOSList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getiOSList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'mobile';\n      } else if (getWebList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getWebList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'web';\n      } else if (getDesktopList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getDesktopList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'desktop';\n      } else if (getExtensionList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name))) {\n        selectedApp = getExtensionList().find(app => lowerCaseCompare(app.name, walletInfo === null || walletInfo === void 0 ? void 0 : walletInfo.name));\n        type = 'extension';\n      }\n      if (selectedApp) {\n        let deeplink;\n        if (selectedApp.hasOwnProperty('links')) {\n          deeplink = selectedApp.links[(_a = selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.network.type) !== null && _a !== void 0 ? _a : this.preferredNetwork];\n        } else if (selectedApp.hasOwnProperty('deepLink')) {\n          deeplink = selectedApp.deepLink;\n        }\n        return {\n          name: walletInfo.name,\n          icon: (_b = walletInfo.icon) !== null && _b !== void 0 ? _b : selectedApp.logo,\n          deeplink,\n          type\n        };\n      }\n      return walletInfo;\n    });\n  }\n  getPeer(account) {\n    var _a, _b, _c, _d;\n    return __awaiter(this, void 0, void 0, function* () {\n      let peer;\n      if (account) {\n        logger.log('getPeer', 'We have an account', account);\n        const postMessagePeers = (_b = yield (_a = this.postMessageTransport) === null || _a === void 0 ? void 0 : _a.getPeers()) !== null && _b !== void 0 ? _b : [];\n        const p2pPeers = (_d = yield (_c = this.p2pTransport) === null || _c === void 0 ? void 0 : _c.getPeers()) !== null && _d !== void 0 ? _d : [];\n        const peers = [...postMessagePeers, ...p2pPeers];\n        logger.log('getPeer', 'Found peers', peers, account);\n        peer = peers.find(peerEl => peerEl.senderId === account.senderId);\n        if (!peer) {\n          // We could not find an exact match for a sender, so we most likely received it over a relay\n          peer = peers.find(peerEl => peerEl.extensionId === account.origin.id);\n        }\n      } else {\n        peer = yield this._activePeer.promise;\n        logger.log('getPeer', 'Active peer', peer);\n      }\n      if (!peer) {\n        throw new Error('No matching peer found.');\n      }\n      return peer;\n    });\n  }\n  /**\n   * This method handles sending of requests to the DApp. It makes sure that the DAppClient is initialized and connected\n   * to the transport. After that rate limits and permissions will be checked, an ID is attached and the request is sent\n   * to the DApp over the transport.\n   *\n   * @param requestInput The BeaconMessage to be sent to the wallet\n   * @param account The account that the message will be sent to\n   */\n  makeRequest(requestInput) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const messageId = yield generateGUID();\n      console.time(messageId);\n      logger.log('makeRequest', 'starting');\n      yield this.init();\n      console.timeLog(messageId, 'init done');\n      logger.log('makeRequest', 'after init');\n      if (yield this.addRequestAndCheckIfRateLimited()) {\n        this.events.emit(BeaconEvent.LOCAL_RATE_LIMIT_REACHED).catch(emitError => console.warn(emitError));\n        throw new Error('rate limit reached');\n      }\n      if (!(yield this.checkPermissions(requestInput.type))) {\n        this.events.emit(BeaconEvent.NO_PERMISSIONS).catch(emitError => console.warn(emitError));\n        throw new Error('No permissions to send this request to wallet!');\n      }\n      if (!this.beaconId) {\n        throw yield this.sendInternalError('BeaconID not defined');\n      }\n      const request = Object.assign({\n        id: messageId,\n        version: '2',\n        senderId: yield getSenderId(yield this.beaconId)\n      }, requestInput);\n      const exposed = new ExposedPromise();\n      this.addOpenRequest(request.id, exposed);\n      const payload = yield new Serializer().serialize(request);\n      const account = yield this.getActiveAccount();\n      const peer = yield this.getPeer(account);\n      const walletInfo = yield this.getWalletInfo(peer, account);\n      logger.log('makeRequest', 'sending message', request);\n      console.timeLog(messageId, 'sending');\n      try {\n        yield (yield this.transport).send(payload, peer);\n      } catch (sendError) {\n        this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n          text: 'Unable to send message. If this problem persists, please reset the connection and pair your wallet again.',\n          buttons: [{\n            text: 'Reset Connection',\n            actionCallback: () => __awaiter(this, void 0, void 0, function* () {\n              yield closeToast();\n              this.disconnect();\n            })\n          }]\n        });\n        console.timeLog(messageId, 'send error');\n        throw sendError;\n      }\n      console.timeLog(messageId, 'sent');\n      this.events.emit(messageEvents[requestInput.type].sent, {\n        walletInfo: Object.assign(Object.assign({}, walletInfo), {\n          name: (_a = walletInfo.name) !== null && _a !== void 0 ? _a : 'Wallet'\n        }),\n        extraInfo: {\n          resetCallback: () => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n          })\n        }\n      }).catch(emitError => console.warn(emitError));\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exposed.promise; // TODO: fix type\n    });\n  }\n  /**\n   * This method handles sending of requests to the DApp. It makes sure that the DAppClient is initialized and connected\n   * to the transport. After that rate limits and permissions will be checked, an ID is attached and the request is sent\n   * to the DApp over the transport.\n   *\n   * @param requestInput The BeaconMessage to be sent to the wallet\n   * @param account The account that the message will be sent to\n   */\n  makeRequestV3(requestInput) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const messageId = yield generateGUID();\n      console.time(messageId);\n      logger.log('makeRequest', 'starting');\n      yield this.init();\n      console.timeLog(messageId, 'init done');\n      logger.log('makeRequest', 'after init');\n      if (yield this.addRequestAndCheckIfRateLimited()) {\n        this.events.emit(BeaconEvent.LOCAL_RATE_LIMIT_REACHED).catch(emitError => console.warn(emitError));\n        throw new Error('rate limit reached');\n      }\n      // if (!(await this.checkPermissions(requestInput.type as BeaconMessageType))) {\n      //   this.events.emit(BeaconEvent.NO_PERMISSIONS).catch((emitError) => console.warn(emitError))\n      //   throw new Error('No permissions to send this request to wallet!')\n      // }\n      if (!this.beaconId) {\n        throw yield this.sendInternalError('BeaconID not defined');\n      }\n      const request = {\n        id: messageId,\n        version: '3',\n        senderId: yield getSenderId(yield this.beaconId),\n        message: requestInput\n      };\n      const exposed = new ExposedPromise();\n      this.addOpenRequest(request.id, exposed);\n      const payload = yield new Serializer().serialize(request);\n      const account = yield this.getActiveAccount();\n      const peer = yield this.getPeer(account);\n      const walletInfo = yield this.getWalletInfo(peer, account);\n      logger.log('makeRequest', 'sending message', request);\n      console.timeLog(messageId, 'sending');\n      try {\n        yield (yield this.transport).send(payload, peer);\n      } catch (sendError) {\n        this.events.emit(BeaconEvent.INTERNAL_ERROR, {\n          text: 'Unable to send message. If this problem persists, please reset the connection and pair your wallet again.',\n          buttons: [{\n            text: 'Reset Connection',\n            actionCallback: () => __awaiter(this, void 0, void 0, function* () {\n              yield closeToast();\n              this.disconnect();\n            })\n          }]\n        });\n        console.timeLog(messageId, 'send error');\n        throw sendError;\n      }\n      console.timeLog(messageId, 'sent');\n      const index = requestInput.type;\n      this.events.emit(messageEvents[index].sent, {\n        walletInfo: Object.assign(Object.assign({}, walletInfo), {\n          name: (_a = walletInfo.name) !== null && _a !== void 0 ? _a : 'Wallet'\n        }),\n        extraInfo: {\n          resetCallback: () => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n          })\n        }\n      }).catch(emitError => console.warn(emitError));\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exposed.promise; // TODO: fix type\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.postMessageTransport = undefined;\n      this.p2pTransport = undefined;\n      yield Promise.all([this.clearActiveAccount(), (yield this.transport).disconnect()]);\n    });\n  }\n  /**\n   * Adds a requests to the \"openRequests\" set so we know what messages have already been answered/handled.\n   *\n   * @param id The ID of the message\n   * @param promise A promise that resolves once the response for that specific message is received\n   */\n  addOpenRequest(id, promise) {\n    logger.log('addOpenRequest', this.name, `adding request ${id} and waiting for answer`);\n    this.openRequests.set(id, promise);\n  }\n  sendNotificationWithAccessToken(notification) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        url,\n        recipient,\n        title,\n        body,\n        payload,\n        protocolIdentifier,\n        accessToken\n      } = notification;\n      const timestamp = new Date().toISOString();\n      const keypair = yield this.keyPair;\n      const rawPublicKey = keypair.publicKey;\n      const prefix = Buffer.from(new Uint8Array([13, 15, 37, 217]));\n      const publicKey = bs58check.encode(Buffer.concat([prefix, Buffer.from(rawPublicKey)]));\n      const constructedString = ['Tezos Signed Message: ', recipient, title, body, timestamp, payload].join(' ');\n      const bytes = toHex(constructedString);\n      const payloadBytes = '05' + '01' + bytes.length.toString(16).padStart(8, '0') + bytes;\n      const signature = yield signMessage(payloadBytes, {\n        secretKey: Buffer.from(keypair.secretKey)\n      });\n      const notificationResponse = yield axios.post(`${url}/send`, {\n        recipient,\n        title,\n        body,\n        timestamp,\n        payload,\n        accessToken,\n        protocolIdentifier,\n        sender: {\n          name: this.name,\n          publicKey,\n          signature\n        }\n      });\n      return notificationResponse.data;\n    });\n  }\n}","map":{"version":3,"names":["axios","bs58check","BeaconEvent","TransportType","StorageKey","BeaconMessageType","PermissionScope","NetworkType","Origin","BeaconErrorType","SigningType","ColorMode","Client","BeaconError","AppMetadataManager","Serializer","LocalStorage","getAccountIdentifier","getSenderId","Logger","getAddressFromPublicKey","ExposedPromise","generateGUID","toHex","messageEvents","TzktBlockExplorer","closeToast","BeaconEventHandler","DappPostMessageTransport","DappP2PTransport","PostMessageTransport","getColorMode","setColorMode","setDesktopList","setExtensionList","setWebList","setiOSList","getDesktopList","getExtensionList","getWebList","getiOSList","signMessage","logger","DAppClient","constructor","config","Object","assign","storage","events","openRequests","Map","_activeAccount","_activePeer","blockchains","eventHandlers","_a","disableDefaultEvents","blockExplorer","_b","preferredNetwork","_c","MAINNET","_d","colorMode","LIGHT","disclaimerText","errorMessages","_e","appMetadataManager","activeAccountLoaded","get","ACTIVE_ACCOUNT","then","activeAccountIdentifier","__awaiter","setActiveAccount","accountManager","getAccount","undefined","catch","storageError","console","error","handleResponse","message","connectionInfo","openRequest","id","log","version","typedMessage","type","Acknowledge","timeLog","emit","ACKNOWLEDGE_RECEIVED","extraInfo","walletInfo","getWalletInfo","appMetadata","blockchainData","PermissionResponse","addAppMetadata","timeEnd","Error","reject","resolve","delete","Disconnect","relevantTransport","origin","P2P","p2pTransport","_f","postMessageTransport","transport","peers","getPeers","peer","find","peerEl","senderId","removePeer","removeAccountsForPeers","CHANNEL_CLOSED","errorType","_g","initInternalTransports","keyPair","name","addListener","matrixNodes","iconUrl","appUrl","init","_initPromise","Promise","_super","call","_transport","isSettled","connect","activeAccount","getActiveAccount","stopListening","stopListeningForNewPeers","EXTENSION","listenForNewPeer","PAIR_SUCCESS","emitError","warn","setActivePeer","setTransport","POST_MESSAGE","getAvailableExtensions","PAIR_INIT","p2pPeerInfo","getPairingRequestInfo","postmessagePeerInfo","abortedHandler","promise","account","getPeer","set","accountIdentifier","ACTIVE_ACCOUNT_SET","clearActiveAccount","getAppMetadata","getOwnAppMetadata","showPrepare","SHOW_PREPARE","hideUI","elements","HIDE_UI","removeAccount","removeAccountResult","removeAllAccounts","sendDisconnectToPeer","arguments","length","removePeerResult","removeAllPeers","sendDisconnectToPeers","disconnectPromises","map","all","subscribeToEvent","internalEvent","eventCallback","on","checkPermissions","PermissionRequest","sendInternalError","permissions","scopes","OperationRequest","includes","OPERATION_REQUEST","SignPayloadRequest","SIGN","BroadcastRequest","sendNotification","title","payload","protocolIdentifier","NOTIFICATION","notification","token","url","apiUrl","sendNotificationWithAccessToken","recipient","address","body","accessToken","addBlockchain","chain","identifier","getWalletLists","walletLists","desktopList","extensionList","webList","iOSList","removeBlockchain","chainIdentifier","permissionRequest","input","blockchain","blockchainIdentifier","request","response","makeRequestV3","_requestError","partialAccountInfos","getAccountInfosFromPermissionResponse","accountInfo","accountId","publicKey","connectedAt","Date","getTime","chainData","addAccount","output","connectionContext","notifySuccess","network","validateRequest","BlockchainRequest","requestError","requestPermissions","makeRequest","handleRequestError","pubkey","pubKey","threshold","requestSignPayload","signingType","OPERATION","startsWith","MICHELINE","RAW","sourceAddress","requestOperation","operationDetails","requestBroadcast","signedTransaction","result","ACTIVE_TRANSPORT_SET","errorMessage","INTERNAL_ERROR","text","peersToRemove","accounts","getAccounts","peerIdsToRemove","accountsToRemove","filter","accountIdentifiersToRemove","removeAccounts","beaconError","buttons","NO_PRIVATE_KEY_FOUND_ERROR","actionCallback","operationRequest","push","errorResponse","getError","errorData","success","selectedAccount","selectedPeer","typedPeer","icon","lowerCaseCompare","str1","str2","toLowerCase","selectedApp","app","deeplink","hasOwnProperty","links","deepLink","logo","postMessagePeers","p2pPeers","extensionId","requestInput","messageId","time","addRequestAndCheckIfRateLimited","LOCAL_RATE_LIMIT_REACHED","NO_PERMISSIONS","beaconId","exposed","addOpenRequest","serialize","send","sendError","disconnect","sent","resetCallback","index","timestamp","toISOString","keypair","rawPublicKey","prefix","Buffer","from","Uint8Array","encode","concat","constructedString","join","bytes","payloadBytes","toString","padStart","signature","secretKey","notificationResponse","post","sender","data"],"sources":["../../../src/dapp-client/DAppClient.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}