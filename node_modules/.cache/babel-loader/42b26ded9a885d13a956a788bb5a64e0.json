{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openBox = exports.box = exports.precomputeSharedKey = exports.generateKeyPair = void 0;\nconst x25519_1 = require(\"@stablelib/x25519\");\nconst xsalsa20_1 = require(\"@stablelib/xsalsa20\");\nconst secretbox_1 = require(\"./secretbox\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nvar x25519_2 = require(\"@stablelib/x25519\");\nObject.defineProperty(exports, \"generateKeyPair\", {\n  enumerable: true,\n  get: function () {\n    return x25519_2.generateKeyPair;\n  }\n});\nconst zeros16 = new Uint8Array(16);\nfunction precomputeSharedKey(theirPublicKey, mySecretKey) {\n  // Compute scalar multiplication result.\n  const key = (0, x25519_1.scalarMult)(mySecretKey, theirPublicKey);\n  // Hash key with HSalsa function.\n  (0, xsalsa20_1.hsalsa)(key, zeros16, key);\n  return key;\n}\nexports.precomputeSharedKey = precomputeSharedKey;\nfunction box(theirPublicKey, mySecretKey, nonce, data) {\n  const sharedKey = precomputeSharedKey(theirPublicKey, mySecretKey);\n  const result = (0, secretbox_1.secretBox)(sharedKey, nonce, data);\n  (0, wipe_1.wipe)(sharedKey);\n  return result;\n}\nexports.box = box;\nfunction openBox(theirPublicKey, mySecretKey, nonce, data) {\n  const sharedKey = precomputeSharedKey(theirPublicKey, mySecretKey);\n  const result = (0, secretbox_1.openSecretBox)(sharedKey, nonce, data);\n  (0, wipe_1.wipe)(sharedKey);\n  return result;\n}\nexports.openBox = openBox;","map":{"version":3,"names":["x25519_1","require","xsalsa20_1","secretbox_1","wipe_1","x25519_2","Object","defineProperty","exports","enumerable","get","generateKeyPair","zeros16","Uint8Array","precomputeSharedKey","theirPublicKey","mySecretKey","key","scalarMult","hsalsa","box","nonce","data","sharedKey","result","secretBox","wipe","openBox","openSecretBox"],"sources":["../box.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,WAAA,GAAAF,OAAA;AACA,MAAAG,MAAA,GAAAH,OAAA;AAEA,IAAAI,QAAA,GAAAJ,OAAA;AAASK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAL,QAAA,CAAAM,eAAe;EAAA;AAAA;AAExB,MAAMC,OAAO,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AAElC,SAAgBC,mBAAmBA,CAACC,cAA0B,EAAEC,WAAuB;EACnF;EACA,MAAMC,GAAG,GAAG,IAAAjB,QAAA,CAAAkB,UAAU,EAACF,WAAW,EAAED,cAAc,CAAC;EAEnD;EACA,IAAAb,UAAA,CAAAiB,MAAM,EAACF,GAAG,EAAEL,OAAO,EAAEK,GAAG,CAAC;EAEzB,OAAOA,GAAG;AACd;AARAT,OAAA,CAAAM,mBAAA,GAAAA,mBAAA;AAUA,SAAgBM,GAAGA,CAACL,cAA0B,EAAEC,WAAuB,EACnEK,KAAiB,EAAEC,IAAgB;EACnC,MAAMC,SAAS,GAAGT,mBAAmB,CAACC,cAAc,EAAEC,WAAW,CAAC;EAClE,MAAMQ,MAAM,GAAG,IAAArB,WAAA,CAAAsB,SAAS,EAACF,SAAS,EAAEF,KAAK,EAAEC,IAAI,CAAC;EAChD,IAAAlB,MAAA,CAAAsB,IAAI,EAACH,SAAS,CAAC;EACf,OAAOC,MAAM;AACjB;AANAhB,OAAA,CAAAY,GAAA,GAAAA,GAAA;AAQA,SAAgBO,OAAOA,CAACZ,cAA0B,EAAEC,WAAuB,EACvEK,KAAiB,EAAEC,IAAgB;EACnC,MAAMC,SAAS,GAAGT,mBAAmB,CAACC,cAAc,EAAEC,WAAW,CAAC;EAClE,MAAMQ,MAAM,GAAG,IAAArB,WAAA,CAAAyB,aAAa,EAACL,SAAS,EAAEF,KAAK,EAAEC,IAAI,CAAC;EACpD,IAAAlB,MAAA,CAAAsB,IAAI,EAACH,SAAS,CAAC;EACf,OAAOC,MAAM;AACjB;AANAhB,OAAA,CAAAmB,OAAA,GAAAA,OAAA"},"metadata":{},"sourceType":"script"}