{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { randomBytes } from '@stablelib/random';\n/**\r\n * Generate a random GUID\r\n */\nexport function generateGUID() {\n  return __awaiter(this, void 0, void 0, function* () {\n    const buf = randomBytes(16);\n    return [buf.slice(0, 4), buf.slice(4, 6), buf.slice(6, 8), buf.slice(8, 10), buf.slice(10, 16)].map(function (subbuf) {\n      return Buffer.from(subbuf).toString('hex');\n    }).join('-');\n  });\n}\n/* eslint-enable prefer-arrow/prefer-arrow-functions */","map":{"version":3,"names":["randomBytes","generateGUID","buf","slice","map","subbuf","Buffer","from","toString","join"],"sources":["../../../src/utils/generate-uuid.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,WAAW,QAAQ,mBAAmB;AAE/C;;;AAGA,OAAM,SAAgBC,YAAYA,CAAA;;IAChC,MAAMC,GAAG,GAAGF,WAAW,CAAC,EAAE,CAAC;IAE3B,OAAO,CAACE,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAED,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAED,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAED,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAED,GAAG,CAACC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC5FC,GAAG,CAAC,UAAUC,MAAM;MACnB,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,KAAK,CAAC;IAC5C,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;EACd,CAAC;;AAED"},"metadata":{},"sourceType":"module"}